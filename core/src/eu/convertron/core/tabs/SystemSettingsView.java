package eu.convertron.core.tabs;

import eu.convertron.applib.settings.GuiSettingBridge;
import eu.convertron.core.CoreSettings;
import eu.convertron.core.Resources;
import eu.convertron.interlib.interfaces.View;
import eu.convertron.interlib.util.GuiBridge;
import javax.swing.JComponent;
import javax.swing.JFileChooser;

public class SystemSettingsView extends View
{
    private static final long serialVersionUID = -2511460498919004232L;
    private final JComponent[] useRemoteComponents;

    public SystemSettingsView()
    {
        initComponents();

        useRemoteComponents = new JComponent[]
        {
            hostPortRadioBtn, httpLabel, hostTxt, hostportLabel, portTxt,
            wsdlLabel, wsdlRadioBtn, wsdlTxt
        };

        useRemoteCheckBoxItemStateChanged(null);
    }

    public void addSaveListener(Runnable task)
    {
        saveAndRestartBtn.addActionListener(getActionListenerToRunnable(task));
    }

    public GuiBridge[] createBridges()
    {
        return new GuiBridge[]
        {
            new GuiSettingBridge(CoreSettings.useRemote, useRemoteCheckBox),
            new GuiSettingBridge(CoreSettings.useCustomWsdl, wsdlRadioBtn),
            new GuiSettingBridge(CoreSettings.remoteHost, hostTxt),
            new GuiSettingBridge(CoreSettings.remotePort, portTxt),
            new GuiSettingBridge(CoreSettings.remoteWsdl, wsdlTxt),
            //-----
            new GuiSettingBridge(CoreSettings.pathGlobalData, globalDataPathTextField),
            new GuiSettingBridge(CoreSettings.pathLocalData, localDataPathTextField),
            new GuiSettingBridge(CoreSettings.pathBackup, backupPathTextField),
        };
    }

    @Override
    public String getTabTitle()
    {
        return "Systemeinstellungen";
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        folderChooser = new javax.swing.JFileChooser();
        wsdlTypeRadioBtnGroup = new javax.swing.ButtonGroup();
        wsdlRadioBtn = new javax.swing.JRadioButton();
        wsdlTxt = new javax.swing.JTextField();
        wsdlLabel = new javax.swing.JLabel();
        portTxt = new javax.swing.JTextField();
        hostportLabel = new javax.swing.JLabel();
        hostTxt = new javax.swing.JTextField();
        httpLabel = new javax.swing.JLabel();
        hostPortRadioBtn = new javax.swing.JRadioButton();
        useRemoteCheckBox = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        pathsLabel = new javax.swing.JLabel();
        globalDataPathLabel = new javax.swing.JLabel();
        backupPathLabel = new javax.swing.JLabel();
        globalDataPathTextField = new javax.swing.JTextField();
        backupPathTextField = new javax.swing.JTextField();
        globalDataPathChooseButton = new javax.swing.JButton();
        backupPathChooseButton = new javax.swing.JButton();
        localDataPathLabel = new javax.swing.JLabel();
        localDataPathTextField = new javax.swing.JTextField();
        localDataPathChooseButton = new javax.swing.JButton();
        saveAndRestartBtn = new javax.swing.JButton();

        wsdlTypeRadioBtnGroup.add(wsdlRadioBtn);
        wsdlRadioBtn.setText("WSDL");

        wsdlLabel.setText("/_convertron?WSDL");

        portTxt.setText("0");

        hostportLabel.setText(":");

        httpLabel.setText("http://");

        wsdlTypeRadioBtnGroup.add(hostPortRadioBtn);
        hostPortRadioBtn.setSelected(true);
        hostPortRadioBtn.setText("Host/Port");

        useRemoteCheckBox.setText("Remote Modus");
        useRemoteCheckBox.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                useRemoteCheckBoxItemStateChanged(evt);
            }
        });

        pathsLabel.setText("Pfade:");

        globalDataPathLabel.setText("Globale Daten");

        backupPathLabel.setText("Backup");

        globalDataPathChooseButton.setIcon(new javax.swing.ImageIcon(Resources.get("ordner.png")));
        globalDataPathChooseButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                globalDataPathChooseButtonActionPerformed(evt);
            }
        });

        backupPathChooseButton.setIcon(new javax.swing.ImageIcon(Resources.get("ordner.png")));
        backupPathChooseButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                backupPathChooseButtonActionPerformed(evt);
            }
        });

        localDataPathLabel.setText("Lokale Daten");

        saveAndRestartBtn.setText("Speichern und Neustarten");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveAndRestartBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(useRemoteCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hostPortRadioBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(wsdlRadioBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(httpLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hostTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hostportLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(portTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(wsdlLabel))
                            .addComponent(wsdlTxt)))
                    .addComponent(pathsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backupPathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(localDataPathLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(globalDataPathLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backupPathTextField)
                            .addComponent(globalDataPathTextField)
                            .addComponent(localDataPathTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(globalDataPathChooseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(localDataPathChooseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addComponent(backupPathChooseButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(useRemoteCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hostPortRadioBtn)
                    .addComponent(hostTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hostportLabel)
                    .addComponent(wsdlLabel)
                    .addComponent(httpLabel)
                    .addComponent(portTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wsdlRadioBtn)
                    .addComponent(wsdlTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pathsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(globalDataPathChooseButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(globalDataPathLabel)
                        .addComponent(globalDataPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(localDataPathLabel)
                        .addComponent(localDataPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(localDataPathChooseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(backupPathLabel)
                        .addComponent(backupPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(backupPathChooseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(saveAndRestartBtn)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void useRemoteCheckBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_useRemoteCheckBoxItemStateChanged
    {//GEN-HEADEREND:event_useRemoteCheckBoxItemStateChanged
        for(JComponent comp : useRemoteComponents)
            comp.setEnabled(useRemoteCheckBox.isSelected());
    }//GEN-LAST:event_useRemoteCheckBoxItemStateChanged

    private void globalDataPathChooseButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_globalDataPathChooseButtonActionPerformed
    {//GEN-HEADEREND:event_globalDataPathChooseButtonActionPerformed
        if(folderChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION)
            globalDataPathTextField.setText(folderChooser.getSelectedFile().getPath());
    }//GEN-LAST:event_globalDataPathChooseButtonActionPerformed

    private void backupPathChooseButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_backupPathChooseButtonActionPerformed
    {//GEN-HEADEREND:event_backupPathChooseButtonActionPerformed
        if(folderChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION)
            backupPathTextField.setText(folderChooser.getSelectedFile().getPath());
    }//GEN-LAST:event_backupPathChooseButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backupPathChooseButton;
    private javax.swing.JLabel backupPathLabel;
    private javax.swing.JTextField backupPathTextField;
    private javax.swing.JFileChooser folderChooser;
    private javax.swing.JButton globalDataPathChooseButton;
    private javax.swing.JLabel globalDataPathLabel;
    private javax.swing.JTextField globalDataPathTextField;
    private javax.swing.JRadioButton hostPortRadioBtn;
    private javax.swing.JTextField hostTxt;
    private javax.swing.JLabel hostportLabel;
    private javax.swing.JLabel httpLabel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton localDataPathChooseButton;
    private javax.swing.JLabel localDataPathLabel;
    private javax.swing.JTextField localDataPathTextField;
    private javax.swing.JLabel pathsLabel;
    private javax.swing.JTextField portTxt;
    private javax.swing.JButton saveAndRestartBtn;
    private javax.swing.JCheckBox useRemoteCheckBox;
    private javax.swing.JLabel wsdlLabel;
    private javax.swing.JRadioButton wsdlRadioBtn;
    private javax.swing.JTextField wsdlTxt;
    private javax.swing.ButtonGroup wsdlTypeRadioBtnGroup;
    // End of variables declaration//GEN-END:variables
}
