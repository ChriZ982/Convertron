From 43b2b2581bf4dc440b086e8ff6a3e6c9980fdd2e Mon Sep 17 00:00:00 2001
From: ChriZ98 <christopher.zinda@unitybox.de>
Date: Sun, 23 Nov 2014 20:33:47 +0100
Subject: [PATCH] init project

---
 Data/settings.ini                                |    4 +
 build.xml                                        |   73 ++
 manifest.mf                                      |    3 +
 nbproject/Data/antonianumLogo.jpg                |  Bin 0 -> 14829 bytes
 nbproject/build-impl.xml                         | 1413 ++++++++++++++++++++++
 nbproject/genfiles.properties                    |    8 +
 nbproject/project.properties                     |   74 ++
 nbproject/project.xml                            |   15 +
 src/com/facharbeit/io/Reader.java                |  135 +++
 src/com/facharbeit/io/SettingHandler.java        |  131 ++
 src/com/facharbeit/io/Settings.java              |  104 ++
 src/com/facharbeit/io/Writer.java                |  102 ++
 src/com/facharbeit/listener/TimeHandler.java     |   19 +
 src/com/facharbeit/listener/TimeListener.java    |   71 ++
 src/com/facharbeit/main/Application.java         |  130 ++
 src/com/facharbeit/main/Entry.java               |   79 ++
 src/com/facharbeit/main/Frame.form               |  749 ++++++++++++
 src/com/facharbeit/main/Frame.java               |  773 ++++++++++++
 src/com/facharbeit/main/Input.java               |   42 +
 src/com/facharbeit/main/Output.java              |   30 +
 src/com/facharbeit/main/QueueElement.java        |   28 +
 src/com/facharbeit/main/SchoolClass.java         |   50 +
 src/com/facharbeit/ressources/Settings16.png     |  Bin 0 -> 611 bytes
 src/com/facharbeit/ressources/antonianumLogo.jpg |  Bin 0 -> 14829 bytes
 src/com/facharbeit/ressources/folder.png         |  Bin 0 -> 2524 bytes
 src/com/facharbeit/ressources/ordner.png         |  Bin 0 -> 3205 bytes
 src/com/facharbeit/sql/sqlReader.java            |  114 ++
 src/com/facharbeit/sql/sqlTableReader.java       |   77 ++
 src/com/facharbeit/sql/sqlTableWriter.java       |   64 +
 src/com/facharbeit/sql/sqlWriter.java            |  118 ++
 src/com/facharbeit/tools/Logger.java             |   94 ++
 src/com/facharbeit/tools/TextTool.java           |   97 ++
 32 files changed, 4597 insertions(+)
 create mode 100644 Data/settings.ini
 create mode 100644 build.xml
 create mode 100644 manifest.mf
 create mode 100644 nbproject/Data/antonianumLogo.jpg
 create mode 100644 nbproject/build-impl.xml
 create mode 100644 nbproject/genfiles.properties
 create mode 100644 nbproject/project.properties
 create mode 100644 nbproject/project.xml
 create mode 100644 src/com/facharbeit/io/Reader.java
 create mode 100644 src/com/facharbeit/io/SettingHandler.java
 create mode 100644 src/com/facharbeit/io/Settings.java
 create mode 100644 src/com/facharbeit/io/Writer.java
 create mode 100644 src/com/facharbeit/listener/TimeHandler.java
 create mode 100644 src/com/facharbeit/listener/TimeListener.java
 create mode 100644 src/com/facharbeit/main/Application.java
 create mode 100644 src/com/facharbeit/main/Entry.java
 create mode 100644 src/com/facharbeit/main/Frame.form
 create mode 100644 src/com/facharbeit/main/Frame.java
 create mode 100644 src/com/facharbeit/main/Input.java
 create mode 100644 src/com/facharbeit/main/Output.java
 create mode 100644 src/com/facharbeit/main/QueueElement.java
 create mode 100644 src/com/facharbeit/main/SchoolClass.java
 create mode 100644 src/com/facharbeit/ressources/Settings16.png
 create mode 100644 src/com/facharbeit/ressources/antonianumLogo.jpg
 create mode 100644 src/com/facharbeit/ressources/folder.png
 create mode 100644 src/com/facharbeit/ressources/ordner.png
 create mode 100644 src/com/facharbeit/sql/sqlReader.java
 create mode 100644 src/com/facharbeit/sql/sqlTableReader.java
 create mode 100644 src/com/facharbeit/sql/sqlTableWriter.java
 create mode 100644 src/com/facharbeit/sql/sqlWriter.java
 create mode 100644 src/com/facharbeit/tools/Logger.java
 create mode 100644 src/com/facharbeit/tools/TextTool.java

diff --git a/Data/settings.ini b/Data/settings.ini
new file mode 100644
index 0000000..8306794
--- /dev/null
+++ b/Data/settings.ini
@@ -0,0 +1,4 @@
+color1: "#ff00ff"
+planSpeed: "10"
+motdSpeed: "12"
+destPath1: "C:\Users\Mirko\Documents"
\ No newline at end of file
diff --git a/build.xml b/build.xml
new file mode 100644
index 0000000..f82545c
--- /dev/null
+++ b/build.xml
@@ -0,0 +1,73 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- You may freely edit this file. See commented blocks below for -->
+<!-- some examples of how to customize the build. -->
+<!-- (If you delete it and reopen the project it will be recreated.) -->
+<!-- By default, only the Clean and Build commands use this build script. -->
+<!-- Commands such as Run, Debug, and Test only use this build script if -->
+<!-- the Compile on Save feature is turned off for the project. -->
+<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
+<!-- in the project's Project Properties dialog box.-->
+<project name="Facharbeit" default="default" basedir=".">
+    <description>Builds, tests, and runs the project Facharbeit.</description>
+    <import file="nbproject/build-impl.xml"/>
+    <!--
+
+    There exist several targets which are by default empty and which can be 
+    used for execution of your tasks. These targets are usually executed 
+    before and after some main targets. They are: 
+
+      -pre-init:                 called before initialization of project properties
+      -post-init:                called after initialization of project properties
+      -pre-compile:              called before javac compilation
+      -post-compile:             called after javac compilation
+      -pre-compile-single:       called before javac compilation of single file
+      -post-compile-single:      called after javac compilation of single file
+      -pre-compile-test:         called before javac compilation of JUnit tests
+      -post-compile-test:        called after javac compilation of JUnit tests
+      -pre-compile-test-single:  called before javac compilation of single JUnit test
+      -post-compile-test-single: called after javac compilation of single JUunit test
+      -pre-jar:                  called before JAR building
+      -post-jar:                 called after JAR building
+      -post-clean:               called after cleaning build products
+
+    (Targets beginning with '-' are not intended to be called on their own.)
+
+    Example of inserting an obfuscator after compilation could look like this:
+
+        <target name="-post-compile">
+            <obfuscate>
+                <fileset dir="${build.classes.dir}"/>
+            </obfuscate>
+        </target>
+
+    For list of available properties check the imported 
+    nbproject/build-impl.xml file. 
+
+
+    Another way to customize the build is by overriding existing main targets.
+    The targets of interest are: 
+
+      -init-macrodef-javac:     defines macro for javac compilation
+      -init-macrodef-junit:     defines macro for junit execution
+      -init-macrodef-debug:     defines macro for class debugging
+      -init-macrodef-java:      defines macro for class execution
+      -do-jar:                  JAR building
+      run:                      execution of project 
+      -javadoc-build:           Javadoc generation
+      test-report:              JUnit report generation
+
+    An example of overriding the target for project execution could look like this:
+
+        <target name="run" depends="Facharbeit-impl.jar">
+            <exec dir="bin" executable="launcher.exe">
+                <arg file="${dist.jar}"/>
+            </exec>
+        </target>
+
+    Notice that the overridden target depends on the jar target and not only on 
+    the compile target as the regular run target does. Again, for a list of available 
+    properties which you can use, check the target you are overriding in the
+    nbproject/build-impl.xml file. 
+
+    -->
+</project>
diff --git a/manifest.mf b/manifest.mf
new file mode 100644
index 0000000..328e8e5
--- /dev/null
+++ b/manifest.mf
@@ -0,0 +1,3 @@
+Manifest-Version: 1.0
+X-COMMENT: Main-Class will be added automatically by build
+
diff --git a/nbproject/Data/antonianumLogo.jpg b/nbproject/Data/antonianumLogo.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..a24bc687b553611bcb0b40752bb829a56163b68d
GIT binary patch
literal 14829
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
Qw;g}KuKX_>Jjc`j3yb!4V*mgE

literal 0
HcmV?d00001

diff --git a/nbproject/build-impl.xml b/nbproject/build-impl.xml
new file mode 100644
index 0000000..7b0bfa5
--- /dev/null
+++ b/nbproject/build-impl.xml
@@ -0,0 +1,1413 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+*** GENERATED FROM project.xml - DO NOT EDIT  ***
+***         EDIT ../build.xml INSTEAD         ***
+
+For the purpose of easier reading the script
+is divided into following sections:
+
+  - initialization
+  - compilation
+  - jar
+  - execution
+  - debugging
+  - javadoc
+  - test compilation
+  - test execution
+  - test debugging
+  - applet
+  - cleanup
+
+        -->
+<project xmlns:j2seproject1="http://www.netbeans.org/ns/j2se-project/1" xmlns:j2seproject3="http://www.netbeans.org/ns/j2se-project/3" xmlns:jaxrpc="http://www.netbeans.org/ns/j2se-project/jax-rpc" basedir=".." default="default" name="Facharbeit-impl">
+    <fail message="Please build using Ant 1.8.0 or higher.">
+        <condition>
+            <not>
+                <antversion atleast="1.8.0"/>
+            </not>
+        </condition>
+    </fail>
+    <target depends="test,jar,javadoc" description="Build and test whole project." name="default"/>
+    <!-- 
+                ======================
+                INITIALIZATION SECTION 
+                ======================
+            -->
+    <target name="-pre-init">
+        <!-- Empty placeholder for easier customization. -->
+        <!-- You can override this target in the ../build.xml file. -->
+    </target>
+    <target depends="-pre-init" name="-init-private">
+        <property file="nbproject/private/config.properties"/>
+        <property file="nbproject/private/configs/${config}.properties"/>
+        <property file="nbproject/private/private.properties"/>
+    </target>
+    <target depends="-pre-init,-init-private" name="-init-user">
+        <property file="${user.properties.file}"/>
+        <!-- The two properties below are usually overridden -->
+        <!-- by the active platform. Just a fallback. -->
+        <property name="default.javac.source" value="1.4"/>
+        <property name="default.javac.target" value="1.4"/>
+    </target>
+    <target depends="-pre-init,-init-private,-init-user" name="-init-project">
+        <property file="nbproject/configs/${config}.properties"/>
+        <property file="nbproject/project.properties"/>
+    </target>
+    <target depends="-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property" name="-do-init">
+        <property name="platform.java" value="${java.home}/bin/java"/>
+        <available file="${manifest.file}" property="manifest.available"/>
+        <condition property="splashscreen.available">
+            <and>
+                <not>
+                    <equals arg1="${application.splash}" arg2="" trim="true"/>
+                </not>
+                <available file="${application.splash}"/>
+            </and>
+        </condition>
+        <condition property="main.class.available">
+            <and>
+                <isset property="main.class"/>
+                <not>
+                    <equals arg1="${main.class}" arg2="" trim="true"/>
+                </not>
+            </and>
+        </condition>
+        <condition property="profile.available">
+            <and>
+                <isset property="javac.profile"/>
+                <length length="0" string="${javac.profile}" when="greater"/>
+                <matches pattern="1\.[89](\..*)?" string="${javac.source}"/>
+            </and>
+        </condition>
+        <condition property="do.archive">
+            <or>
+                <not>
+                    <istrue value="${jar.archive.disabled}"/>
+                </not>
+                <istrue value="${not.archive.disabled}"/>
+            </or>
+        </condition>
+        <condition property="do.mkdist">
+            <and>
+                <isset property="do.archive"/>
+                <isset property="libs.CopyLibs.classpath"/>
+                <not>
+                    <istrue value="${mkdist.disabled}"/>
+                </not>
+            </and>
+        </condition>
+        <condition property="do.archive+manifest.available">
+            <and>
+                <isset property="manifest.available"/>
+                <istrue value="${do.archive}"/>
+            </and>
+        </condition>
+        <condition property="do.archive+main.class.available">
+            <and>
+                <isset property="main.class.available"/>
+                <istrue value="${do.archive}"/>
+            </and>
+        </condition>
+        <condition property="do.archive+splashscreen.available">
+            <and>
+                <isset property="splashscreen.available"/>
+                <istrue value="${do.archive}"/>
+            </and>
+        </condition>
+        <condition property="do.archive+profile.available">
+            <and>
+                <isset property="profile.available"/>
+                <istrue value="${do.archive}"/>
+            </and>
+        </condition>
+        <condition property="have.tests">
+            <or>
+                <available file="${test.src.dir}"/>
+            </or>
+        </condition>
+        <condition property="have.sources">
+            <or>
+                <available file="${src.dir}"/>
+            </or>
+        </condition>
+        <condition property="netbeans.home+have.tests">
+            <and>
+                <isset property="netbeans.home"/>
+                <isset property="have.tests"/>
+            </and>
+        </condition>
+        <condition property="no.javadoc.preview">
+            <and>
+                <isset property="javadoc.preview"/>
+                <isfalse value="${javadoc.preview}"/>
+            </and>
+        </condition>
+        <property name="run.jvmargs" value=""/>
+        <property name="run.jvmargs.ide" value=""/>
+        <property name="javac.compilerargs" value=""/>
+        <property name="work.dir" value="${basedir}"/>
+        <condition property="no.deps">
+            <and>
+                <istrue value="${no.dependencies}"/>
+            </and>
+        </condition>
+        <property name="javac.debug" value="true"/>
+        <property name="javadoc.preview" value="true"/>
+        <property name="application.args" value=""/>
+        <property name="source.encoding" value="${file.encoding}"/>
+        <property name="runtime.encoding" value="${source.encoding}"/>
+        <condition property="javadoc.encoding.used" value="${javadoc.encoding}">
+            <and>
+                <isset property="javadoc.encoding"/>
+                <not>
+                    <equals arg1="${javadoc.encoding}" arg2=""/>
+                </not>
+            </and>
+        </condition>
+        <property name="javadoc.encoding.used" value="${source.encoding}"/>
+        <property name="includes" value="**"/>
+        <property name="excludes" value=""/>
+        <property name="do.depend" value="false"/>
+        <condition property="do.depend.true">
+            <istrue value="${do.depend}"/>
+        </condition>
+        <path id="endorsed.classpath.path" path="${endorsed.classpath}"/>
+        <condition else="" property="endorsed.classpath.cmd.line.arg" value="-Xbootclasspath/p:'${toString:endorsed.classpath.path}'">
+            <and>
+                <isset property="endorsed.classpath"/>
+                <not>
+                    <equals arg1="${endorsed.classpath}" arg2="" trim="true"/>
+                </not>
+            </and>
+        </condition>
+        <condition else="" property="javac.profile.cmd.line.arg" value="-profile ${javac.profile}">
+            <isset property="profile.available"/>
+        </condition>
+        <condition else="false" property="jdkBug6558476">
+            <and>
+                <matches pattern="1\.[56]" string="${java.specification.version}"/>
+                <not>
+                    <os family="unix"/>
+                </not>
+            </and>
+        </condition>
+        <property name="javac.fork" value="${jdkBug6558476}"/>
+        <property name="jar.index" value="false"/>
+        <property name="jar.index.metainf" value="${jar.index}"/>
+        <property name="copylibs.rebase" value="true"/>
+        <available file="${meta.inf.dir}/persistence.xml" property="has.persistence.xml"/>
+        <condition property="junit.available">
+            <or>
+                <available classname="org.junit.Test" classpath="${run.test.classpath}"/>
+                <available classname="junit.framework.Test" classpath="${run.test.classpath}"/>
+            </or>
+        </condition>
+        <condition property="testng.available">
+            <available classname="org.testng.annotations.Test" classpath="${run.test.classpath}"/>
+        </condition>
+        <condition property="junit+testng.available">
+            <and>
+                <istrue value="${junit.available}"/>
+                <istrue value="${testng.available}"/>
+            </and>
+        </condition>
+        <condition else="testng" property="testng.mode" value="mixed">
+            <istrue value="${junit+testng.available}"/>
+        </condition>
+        <condition else="" property="testng.debug.mode" value="-mixed">
+            <istrue value="${junit+testng.available}"/>
+        </condition>
+    </target>
+    <target name="-post-init">
+        <!-- Empty placeholder for easier customization. -->
+        <!-- You can override this target in the ../build.xml file. -->
+    </target>
+    <target depends="-pre-init,-init-private,-init-user,-init-project,-do-init" name="-init-check">
+        <fail unless="src.dir">Must set src.dir</fail>
+        <fail unless="test.src.dir">Must set test.src.dir</fail>
+        <fail unless="build.dir">Must set build.dir</fail>
+        <fail unless="dist.dir">Must set dist.dir</fail>
+        <fail unless="build.classes.dir">Must set build.classes.dir</fail>
+        <fail unless="dist.javadoc.dir">Must set dist.javadoc.dir</fail>
+        <fail unless="build.test.classes.dir">Must set build.test.classes.dir</fail>
+        <fail unless="build.test.results.dir">Must set build.test.results.dir</fail>
+        <fail unless="build.classes.excludes">Must set build.classes.excludes</fail>
+        <fail unless="dist.jar">Must set dist.jar</fail>
+    </target>
+    <target name="-init-macrodef-property">
+        <macrodef name="property" uri="http://www.netbeans.org/ns/j2se-project/1">
+            <attribute name="name"/>
+            <attribute name="value"/>
+            <sequential>
+                <property name="@{name}" value="${@{value}}"/>
+            </sequential>
+        </macrodef>
+    </target>
+    <target depends="-init-ap-cmdline-properties" if="ap.supported.internal" name="-init-macrodef-javac-with-processors">
+        <macrodef name="javac" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${src.dir}" name="srcdir"/>
+            <attribute default="${build.classes.dir}" name="destdir"/>
+            <attribute default="${javac.classpath}" name="classpath"/>
+            <attribute default="${javac.processorpath}" name="processorpath"/>
+            <attribute default="${build.generated.sources.dir}/ap-source-output" name="apgeneratedsrcdir"/>
+            <attribute default="${includes}" name="includes"/>
+            <attribute default="${excludes}" name="excludes"/>
+            <attribute default="${javac.debug}" name="debug"/>
+            <attribute default="${empty.dir}" name="sourcepath"/>
+            <attribute default="${empty.dir}" name="gensrcdir"/>
+            <element name="customize" optional="true"/>
+            <sequential>
+                <property location="${build.dir}/empty" name="empty.dir"/>
+                <mkdir dir="${empty.dir}"/>
+                <mkdir dir="@{apgeneratedsrcdir}"/>
+                <javac debug="@{debug}" deprecation="${javac.deprecation}" destdir="@{destdir}" encoding="${source.encoding}" excludes="@{excludes}" fork="${javac.fork}" includeantruntime="false" includes="@{includes}" source="${javac.source}" sourcepath="@{sourcepath}" srcdir="@{srcdir}" target="${javac.target}" tempdir="${java.io.tmpdir}">
+                    <src>
+                        <dirset dir="@{gensrcdir}" erroronmissingdir="false">
+                            <include name="*"/>
+                        </dirset>
+                    </src>
+                    <classpath>
+                        <path path="@{classpath}"/>
+                    </classpath>
+                    <compilerarg line="${endorsed.classpath.cmd.line.arg}"/>
+                    <compilerarg line="${javac.profile.cmd.line.arg}"/>
+                    <compilerarg line="${javac.compilerargs}"/>
+                    <compilerarg value="-processorpath"/>
+                    <compilerarg path="@{processorpath}:${empty.dir}"/>
+                    <compilerarg line="${ap.processors.internal}"/>
+                    <compilerarg line="${annotation.processing.processor.options}"/>
+                    <compilerarg value="-s"/>
+                    <compilerarg path="@{apgeneratedsrcdir}"/>
+                    <compilerarg line="${ap.proc.none.internal}"/>
+                    <customize/>
+                </javac>
+            </sequential>
+        </macrodef>
+    </target>
+    <target depends="-init-ap-cmdline-properties" name="-init-macrodef-javac-without-processors" unless="ap.supported.internal">
+        <macrodef name="javac" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${src.dir}" name="srcdir"/>
+            <attribute default="${build.classes.dir}" name="destdir"/>
+            <attribute default="${javac.classpath}" name="classpath"/>
+            <attribute default="${javac.processorpath}" name="processorpath"/>
+            <attribute default="${build.generated.sources.dir}/ap-source-output" name="apgeneratedsrcdir"/>
+            <attribute default="${includes}" name="includes"/>
+            <attribute default="${excludes}" name="excludes"/>
+            <attribute default="${javac.debug}" name="debug"/>
+            <attribute default="${empty.dir}" name="sourcepath"/>
+            <attribute default="${empty.dir}" name="gensrcdir"/>
+            <element name="customize" optional="true"/>
+            <sequential>
+                <property location="${build.dir}/empty" name="empty.dir"/>
+                <mkdir dir="${empty.dir}"/>
+                <javac debug="@{debug}" deprecation="${javac.deprecation}" destdir="@{destdir}" encoding="${source.encoding}" excludes="@{excludes}" fork="${javac.fork}" includeantruntime="false" includes="@{includes}" source="${javac.source}" sourcepath="@{sourcepath}" srcdir="@{srcdir}" target="${javac.target}" tempdir="${java.io.tmpdir}">
+                    <src>
+                        <dirset dir="@{gensrcdir}" erroronmissingdir="false">
+                            <include name="*"/>
+                        </dirset>
+                    </src>
+                    <classpath>
+                        <path path="@{classpath}"/>
+                    </classpath>
+                    <compilerarg line="${endorsed.classpath.cmd.line.arg}"/>
+                    <compilerarg line="${javac.profile.cmd.line.arg}"/>
+                    <compilerarg line="${javac.compilerargs}"/>
+                    <customize/>
+                </javac>
+            </sequential>
+        </macrodef>
+    </target>
+    <target depends="-init-macrodef-javac-with-processors,-init-macrodef-javac-without-processors" name="-init-macrodef-javac">
+        <macrodef name="depend" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${src.dir}" name="srcdir"/>
+            <attribute default="${build.classes.dir}" name="destdir"/>
+            <attribute default="${javac.classpath}" name="classpath"/>
+            <sequential>
+                <depend cache="${build.dir}/depcache" destdir="@{destdir}" excludes="${excludes}" includes="${includes}" srcdir="@{srcdir}">
+                    <classpath>
+                        <path path="@{classpath}"/>
+                    </classpath>
+                </depend>
+            </sequential>
+        </macrodef>
+        <macrodef name="force-recompile" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${build.classes.dir}" name="destdir"/>
+            <sequential>
+                <fail unless="javac.includes">Must set javac.includes</fail>
+                <pathconvert pathsep="${line.separator}" property="javac.includes.binary">
+                    <path>
+                        <filelist dir="@{destdir}" files="${javac.includes}"/>
+                    </path>
+                    <globmapper from="*.java" to="*.class"/>
+                </pathconvert>
+                <tempfile deleteonexit="true" property="javac.includesfile.binary"/>
+                <echo file="${javac.includesfile.binary}" message="${javac.includes.binary}"/>
+                <delete>
+                    <files includesfile="${javac.includesfile.binary}"/>
+                </delete>
+                <delete>
+                    <fileset file="${javac.includesfile.binary}"/>
+                </delete>
+            </sequential>
+        </macrodef>
+    </target>
+    <target if="${junit.available}" name="-init-macrodef-junit-init">
+        <condition else="false" property="nb.junit.batch" value="true">
+            <and>
+                <istrue value="${junit.available}"/>
+                <not>
+                    <isset property="test.method"/>
+                </not>
+            </and>
+        </condition>
+        <condition else="false" property="nb.junit.single" value="true">
+            <and>
+                <istrue value="${junit.available}"/>
+                <isset property="test.method"/>
+            </and>
+        </condition>
+    </target>
+    <target name="-init-test-properties">
+        <property name="test.binaryincludes" value="&lt;nothing&gt;"/>
+        <property name="test.binarytestincludes" value=""/>
+        <property name="test.binaryexcludes" value=""/>
+    </target>
+    <target if="${nb.junit.single}" name="-init-macrodef-junit-single" unless="${nb.junit.batch}">
+        <macrodef name="junit" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${includes}" name="includes"/>
+            <attribute default="${excludes}" name="excludes"/>
+            <attribute default="**" name="testincludes"/>
+            <attribute default="" name="testmethods"/>
+            <element name="customize" optional="true"/>
+            <sequential>
+                <property name="junit.forkmode" value="perTest"/>
+                <junit dir="${work.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" forkmode="${junit.forkmode}" showoutput="true" tempdir="${build.dir}">
+                    <test methods="@{testmethods}" name="@{testincludes}" todir="${build.test.results.dir}"/>
+                    <syspropertyset>
+                        <propertyref prefix="test-sys-prop."/>
+                        <mapper from="test-sys-prop.*" to="*" type="glob"/>
+                    </syspropertyset>
+                    <formatter type="brief" usefile="false"/>
+                    <formatter type="xml"/>
+                    <jvmarg value="-ea"/>
+                    <customize/>
+                </junit>
+            </sequential>
+        </macrodef>
+    </target>
+    <target depends="-init-test-properties" if="${nb.junit.batch}" name="-init-macrodef-junit-batch" unless="${nb.junit.single}">
+        <macrodef name="junit" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${includes}" name="includes"/>
+            <attribute default="${excludes}" name="excludes"/>
+            <attribute default="**" name="testincludes"/>
+            <attribute default="" name="testmethods"/>
+            <element name="customize" optional="true"/>
+            <sequential>
+                <property name="junit.forkmode" value="perTest"/>
+                <junit dir="${work.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" forkmode="${junit.forkmode}" showoutput="true" tempdir="${build.dir}">
+                    <batchtest todir="${build.test.results.dir}">
+                        <fileset dir="${test.src.dir}" excludes="@{excludes},${excludes}" includes="@{includes}">
+                            <filename name="@{testincludes}"/>
+                        </fileset>
+                        <fileset dir="${build.test.classes.dir}" excludes="@{excludes},${excludes},${test.binaryexcludes}" includes="${test.binaryincludes}">
+                            <filename name="${test.binarytestincludes}"/>
+                        </fileset>
+                    </batchtest>
+                    <syspropertyset>
+                        <propertyref prefix="test-sys-prop."/>
+                        <mapper from="test-sys-prop.*" to="*" type="glob"/>
+                    </syspropertyset>
+                    <formatter type="brief" usefile="false"/>
+                    <formatter type="xml"/>
+                    <jvmarg value="-ea"/>
+                    <customize/>
+                </junit>
+            </sequential>
+        </macrodef>
+    </target>
+    <target depends="-init-macrodef-junit-init,-init-macrodef-junit-single, -init-macrodef-junit-batch" if="${junit.available}" name="-init-macrodef-junit"/>
+    <target if="${testng.available}" name="-init-macrodef-testng">
+        <macrodef name="testng" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${includes}" name="includes"/>
+            <attribute default="${excludes}" name="excludes"/>
+            <attribute default="**" name="testincludes"/>
+            <attribute default="" name="testmethods"/>
+            <element name="customize" optional="true"/>
+            <sequential>
+                <condition else="" property="testng.methods.arg" value="@{testincludes}.@{testmethods}">
+                    <isset property="test.method"/>
+                </condition>
+                <union id="test.set">
+                    <fileset dir="${test.src.dir}" excludes="@{excludes},**/*.xml,${excludes}" includes="@{includes}">
+                        <filename name="@{testincludes}"/>
+                    </fileset>
+                </union>
+                <taskdef classname="org.testng.TestNGAntTask" classpath="${run.test.classpath}" name="testng"/>
+                <testng classfilesetref="test.set" failureProperty="tests.failed" listeners="org.testng.reporters.VerboseReporter" methods="${testng.methods.arg}" mode="${testng.mode}" outputdir="${build.test.results.dir}" suitename="Facharbeit" testname="TestNG tests" workingDir="${work.dir}">
+                    <xmlfileset dir="${build.test.classes.dir}" includes="@{testincludes}"/>
+                    <propertyset>
+                        <propertyref prefix="test-sys-prop."/>
+                        <mapper from="test-sys-prop.*" to="*" type="glob"/>
+                    </propertyset>
+                    <customize/>
+                </testng>
+            </sequential>
+        </macrodef>
+    </target>
+    <target name="-init-macrodef-test-impl">
+        <macrodef name="test-impl" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${includes}" name="includes"/>
+            <attribute default="${excludes}" name="excludes"/>
+            <attribute default="**" name="testincludes"/>
+            <attribute default="" name="testmethods"/>
+            <element implicit="true" name="customize" optional="true"/>
+            <sequential>
+                <echo>No tests executed.</echo>
+            </sequential>
+        </macrodef>
+    </target>
+    <target depends="-init-macrodef-junit" if="${junit.available}" name="-init-macrodef-junit-impl">
+        <macrodef name="test-impl" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${includes}" name="includes"/>
+            <attribute default="${excludes}" name="excludes"/>
+            <attribute default="**" name="testincludes"/>
+            <attribute default="" name="testmethods"/>
+            <element implicit="true" name="customize" optional="true"/>
+            <sequential>
+                <j2seproject3:junit excludes="@{excludes}" includes="@{includes}" testincludes="@{testincludes}" testmethods="@{testmethods}">
+                    <customize/>
+                </j2seproject3:junit>
+            </sequential>
+        </macrodef>
+    </target>
+    <target depends="-init-macrodef-testng" if="${testng.available}" name="-init-macrodef-testng-impl">
+        <macrodef name="test-impl" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${includes}" name="includes"/>
+            <attribute default="${excludes}" name="excludes"/>
+            <attribute default="**" name="testincludes"/>
+            <attribute default="" name="testmethods"/>
+            <element implicit="true" name="customize" optional="true"/>
+            <sequential>
+                <j2seproject3:testng excludes="@{excludes}" includes="@{includes}" testincludes="@{testincludes}" testmethods="@{testmethods}">
+                    <customize/>
+                </j2seproject3:testng>
+            </sequential>
+        </macrodef>
+    </target>
+    <target depends="-init-macrodef-test-impl,-init-macrodef-junit-impl,-init-macrodef-testng-impl" name="-init-macrodef-test">
+        <macrodef name="test" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${includes}" name="includes"/>
+            <attribute default="${excludes}" name="excludes"/>
+            <attribute default="**" name="testincludes"/>
+            <attribute default="" name="testmethods"/>
+            <sequential>
+                <j2seproject3:test-impl excludes="@{excludes}" includes="@{includes}" testincludes="@{testincludes}" testmethods="@{testmethods}">
+                    <customize>
+                        <classpath>
+                            <path path="${run.test.classpath}"/>
+                        </classpath>
+                        <jvmarg line="${endorsed.classpath.cmd.line.arg}"/>
+                        <jvmarg line="${run.jvmargs}"/>
+                        <jvmarg line="${run.jvmargs.ide}"/>
+                    </customize>
+                </j2seproject3:test-impl>
+            </sequential>
+        </macrodef>
+    </target>
+    <target if="${junit.available}" name="-init-macrodef-junit-debug" unless="${nb.junit.batch}">
+        <macrodef name="junit-debug" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${includes}" name="includes"/>
+            <attribute default="${excludes}" name="excludes"/>
+            <attribute default="**" name="testincludes"/>
+            <attribute default="" name="testmethods"/>
+            <element name="customize" optional="true"/>
+            <sequential>
+                <property name="junit.forkmode" value="perTest"/>
+                <junit dir="${work.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" forkmode="${junit.forkmode}" showoutput="true" tempdir="${build.dir}">
+                    <test methods="@{testmethods}" name="@{testincludes}" todir="${build.test.results.dir}"/>
+                    <syspropertyset>
+                        <propertyref prefix="test-sys-prop."/>
+                        <mapper from="test-sys-prop.*" to="*" type="glob"/>
+                    </syspropertyset>
+                    <formatter type="brief" usefile="false"/>
+                    <formatter type="xml"/>
+                    <jvmarg value="-ea"/>
+                    <jvmarg line="${debug-args-line}"/>
+                    <jvmarg value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}"/>
+                    <customize/>
+                </junit>
+            </sequential>
+        </macrodef>
+    </target>
+    <target depends="-init-test-properties" if="${nb.junit.batch}" name="-init-macrodef-junit-debug-batch">
+        <macrodef name="junit-debug" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${includes}" name="includes"/>
+            <attribute default="${excludes}" name="excludes"/>
+            <attribute default="**" name="testincludes"/>
+            <attribute default="" name="testmethods"/>
+            <element name="customize" optional="true"/>
+            <sequential>
+                <property name="junit.forkmode" value="perTest"/>
+                <junit dir="${work.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" forkmode="${junit.forkmode}" showoutput="true" tempdir="${build.dir}">
+                    <batchtest todir="${build.test.results.dir}">
+                        <fileset dir="${test.src.dir}" excludes="@{excludes},${excludes}" includes="@{includes}">
+                            <filename name="@{testincludes}"/>
+                        </fileset>
+                        <fileset dir="${build.test.classes.dir}" excludes="@{excludes},${excludes},${test.binaryexcludes}" includes="${test.binaryincludes}">
+                            <filename name="${test.binarytestincludes}"/>
+                        </fileset>
+                    </batchtest>
+                    <syspropertyset>
+                        <propertyref prefix="test-sys-prop."/>
+                        <mapper from="test-sys-prop.*" to="*" type="glob"/>
+                    </syspropertyset>
+                    <formatter type="brief" usefile="false"/>
+                    <formatter type="xml"/>
+                    <jvmarg value="-ea"/>
+                    <jvmarg line="${debug-args-line}"/>
+                    <jvmarg value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}"/>
+                    <customize/>
+                </junit>
+            </sequential>
+        </macrodef>
+    </target>
+    <target depends="-init-macrodef-junit-debug,-init-macrodef-junit-debug-batch" if="${junit.available}" name="-init-macrodef-junit-debug-impl">
+        <macrodef name="test-debug-impl" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${includes}" name="includes"/>
+            <attribute default="${excludes}" name="excludes"/>
+            <attribute default="**" name="testincludes"/>
+            <attribute default="" name="testmethods"/>
+            <element implicit="true" name="customize" optional="true"/>
+            <sequential>
+                <j2seproject3:junit-debug excludes="@{excludes}" includes="@{includes}" testincludes="@{testincludes}" testmethods="@{testmethods}">
+                    <customize/>
+                </j2seproject3:junit-debug>
+            </sequential>
+        </macrodef>
+    </target>
+    <target if="${testng.available}" name="-init-macrodef-testng-debug">
+        <macrodef name="testng-debug" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${main.class}" name="testClass"/>
+            <attribute default="" name="testMethod"/>
+            <element name="customize2" optional="true"/>
+            <sequential>
+                <condition else="-testclass @{testClass}" property="test.class.or.method" value="-methods @{testClass}.@{testMethod}">
+                    <isset property="test.method"/>
+                </condition>
+                <condition else="-suitename Facharbeit -testname @{testClass} ${test.class.or.method}" property="testng.cmd.args" value="@{testClass}">
+                    <matches pattern=".*\.xml" string="@{testClass}"/>
+                </condition>
+                <delete dir="${build.test.results.dir}" quiet="true"/>
+                <mkdir dir="${build.test.results.dir}"/>
+                <j2seproject3:debug classname="org.testng.TestNG" classpath="${debug.test.classpath}">
+                    <customize>
+                        <customize2/>
+                        <jvmarg value="-ea"/>
+                        <arg line="${testng.debug.mode}"/>
+                        <arg line="-d ${build.test.results.dir}"/>
+                        <arg line="-listener org.testng.reporters.VerboseReporter"/>
+                        <arg line="${testng.cmd.args}"/>
+                    </customize>
+                </j2seproject3:debug>
+            </sequential>
+        </macrodef>
+    </target>
+    <target depends="-init-macrodef-testng-debug" if="${testng.available}" name="-init-macrodef-testng-debug-impl">
+        <macrodef name="testng-debug-impl" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${main.class}" name="testClass"/>
+            <attribute default="" name="testMethod"/>
+            <element implicit="true" name="customize2" optional="true"/>
+            <sequential>
+                <j2seproject3:testng-debug testClass="@{testClass}" testMethod="@{testMethod}">
+                    <customize2/>
+                </j2seproject3:testng-debug>
+            </sequential>
+        </macrodef>
+    </target>
+    <target depends="-init-macrodef-junit-debug-impl" if="${junit.available}" name="-init-macrodef-test-debug-junit">
+        <macrodef name="test-debug" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${includes}" name="includes"/>
+            <attribute default="${excludes}" name="excludes"/>
+            <attribute default="**" name="testincludes"/>
+            <attribute default="" name="testmethods"/>
+            <attribute default="${main.class}" name="testClass"/>
+            <attribute default="" name="testMethod"/>
+            <sequential>
+                <j2seproject3:test-debug-impl excludes="@{excludes}" includes="@{includes}" testincludes="@{testincludes}" testmethods="@{testmethods}">
+                    <customize>
+                        <classpath>
+                            <path path="${run.test.classpath}"/>
+                        </classpath>
+                        <jvmarg line="${endorsed.classpath.cmd.line.arg}"/>
+                        <jvmarg line="${run.jvmargs}"/>
+                        <jvmarg line="${run.jvmargs.ide}"/>
+                    </customize>
+                </j2seproject3:test-debug-impl>
+            </sequential>
+        </macrodef>
+    </target>
+    <target depends="-init-macrodef-testng-debug-impl" if="${testng.available}" name="-init-macrodef-test-debug-testng">
+        <macrodef name="test-debug" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${includes}" name="includes"/>
+            <attribute default="${excludes}" name="excludes"/>
+            <attribute default="**" name="testincludes"/>
+            <attribute default="" name="testmethods"/>
+            <attribute default="${main.class}" name="testClass"/>
+            <attribute default="" name="testMethod"/>
+            <sequential>
+                <j2seproject3:testng-debug-impl testClass="@{testClass}" testMethod="@{testMethod}">
+                    <customize2>
+                        <syspropertyset>
+                            <propertyref prefix="test-sys-prop."/>
+                            <mapper from="test-sys-prop.*" to="*" type="glob"/>
+                        </syspropertyset>
+                    </customize2>
+                </j2seproject3:testng-debug-impl>
+            </sequential>
+        </macrodef>
+    </target>
+    <target depends="-init-macrodef-test-debug-junit,-init-macrodef-test-debug-testng" name="-init-macrodef-test-debug"/>
+    <!--
+                pre NB7.2 profiling section; consider it deprecated
+            -->
+    <target depends="-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile, -profile-init-check" if="profiler.info.jvmargs.agent" name="profile-init"/>
+    <target if="profiler.info.jvmargs.agent" name="-profile-pre-init">
+        <!-- Empty placeholder for easier customization. -->
+        <!-- You can override this target in the ../build.xml file. -->
+    </target>
+    <target if="profiler.info.jvmargs.agent" name="-profile-post-init">
+        <!-- Empty placeholder for easier customization. -->
+        <!-- You can override this target in the ../build.xml file. -->
+    </target>
+    <target if="profiler.info.jvmargs.agent" name="-profile-init-macrodef-profile">
+        <macrodef name="resolve">
+            <attribute name="name"/>
+            <attribute name="value"/>
+            <sequential>
+                <property name="@{name}" value="${env.@{value}}"/>
+            </sequential>
+        </macrodef>
+        <macrodef name="profile">
+            <attribute default="${main.class}" name="classname"/>
+            <element name="customize" optional="true"/>
+            <sequential>
+                <property environment="env"/>
+                <resolve name="profiler.current.path" value="${profiler.info.pathvar}"/>
+                <java classname="@{classname}" dir="${profiler.info.dir}" fork="true" jvm="${profiler.info.jvm}">
+                    <jvmarg line="${endorsed.classpath.cmd.line.arg}"/>
+                    <jvmarg value="${profiler.info.jvmargs.agent}"/>
+                    <jvmarg line="${profiler.info.jvmargs}"/>
+                    <env key="${profiler.info.pathvar}" path="${profiler.info.agentpath}:${profiler.current.path}"/>
+                    <arg line="${application.args}"/>
+                    <classpath>
+                        <path path="${run.classpath}"/>
+                    </classpath>
+                    <syspropertyset>
+                        <propertyref prefix="run-sys-prop."/>
+                        <mapper from="run-sys-prop.*" to="*" type="glob"/>
+                    </syspropertyset>
+                    <customize/>
+                </java>
+            </sequential>
+        </macrodef>
+    </target>
+    <target depends="-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile" if="profiler.info.jvmargs.agent" name="-profile-init-check">
+        <fail unless="profiler.info.jvm">Must set JVM to use for profiling in profiler.info.jvm</fail>
+        <fail unless="profiler.info.jvmargs.agent">Must set profiler agent JVM arguments in profiler.info.jvmargs.agent</fail>
+    </target>
+    <!--
+                end of pre NB7.2 profiling section
+            -->
+    <target depends="-init-debug-args" name="-init-macrodef-nbjpda">
+        <macrodef name="nbjpdastart" uri="http://www.netbeans.org/ns/j2se-project/1">
+            <attribute default="${main.class}" name="name"/>
+            <attribute default="${debug.classpath}" name="classpath"/>
+            <attribute default="" name="stopclassname"/>
+            <sequential>
+                <nbjpdastart addressproperty="jpda.address" name="@{name}" stopclassname="@{stopclassname}" transport="${debug-transport}">
+                    <classpath>
+                        <path path="@{classpath}"/>
+                    </classpath>
+                </nbjpdastart>
+            </sequential>
+        </macrodef>
+        <macrodef name="nbjpdareload" uri="http://www.netbeans.org/ns/j2se-project/1">
+            <attribute default="${build.classes.dir}" name="dir"/>
+            <sequential>
+                <nbjpdareload>
+                    <fileset dir="@{dir}" includes="${fix.classes}">
+                        <include name="${fix.includes}*.class"/>
+                    </fileset>
+                </nbjpdareload>
+            </sequential>
+        </macrodef>
+    </target>
+    <target name="-init-debug-args">
+        <property name="version-output" value="java version &quot;${ant.java.version}"/>
+        <condition property="have-jdk-older-than-1.4">
+            <or>
+                <contains string="${version-output}" substring="java version &quot;1.0"/>
+                <contains string="${version-output}" substring="java version &quot;1.1"/>
+                <contains string="${version-output}" substring="java version &quot;1.2"/>
+                <contains string="${version-output}" substring="java version &quot;1.3"/>
+            </or>
+        </condition>
+        <condition else="-Xdebug" property="debug-args-line" value="-Xdebug -Xnoagent -Djava.compiler=none">
+            <istrue value="${have-jdk-older-than-1.4}"/>
+        </condition>
+        <condition else="dt_socket" property="debug-transport-by-os" value="dt_shmem">
+            <os family="windows"/>
+        </condition>
+        <condition else="${debug-transport-by-os}" property="debug-transport" value="${debug.transport}">
+            <isset property="debug.transport"/>
+        </condition>
+    </target>
+    <target depends="-init-debug-args" name="-init-macrodef-debug">
+        <macrodef name="debug" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${main.class}" name="classname"/>
+            <attribute default="${debug.classpath}" name="classpath"/>
+            <element name="customize" optional="true"/>
+            <sequential>
+                <java classname="@{classname}" dir="${work.dir}" fork="true">
+                    <jvmarg line="${endorsed.classpath.cmd.line.arg}"/>
+                    <jvmarg line="${debug-args-line}"/>
+                    <jvmarg value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}"/>
+                    <jvmarg value="-Dfile.encoding=${runtime.encoding}"/>
+                    <redirector errorencoding="${runtime.encoding}" inputencoding="${runtime.encoding}" outputencoding="${runtime.encoding}"/>
+                    <jvmarg line="${run.jvmargs}"/>
+                    <jvmarg line="${run.jvmargs.ide}"/>
+                    <classpath>
+                        <path path="@{classpath}"/>
+                    </classpath>
+                    <syspropertyset>
+                        <propertyref prefix="run-sys-prop."/>
+                        <mapper from="run-sys-prop.*" to="*" type="glob"/>
+                    </syspropertyset>
+                    <customize/>
+                </java>
+            </sequential>
+        </macrodef>
+    </target>
+    <target name="-init-macrodef-java">
+        <macrodef name="java" uri="http://www.netbeans.org/ns/j2se-project/1">
+            <attribute default="${main.class}" name="classname"/>
+            <attribute default="${run.classpath}" name="classpath"/>
+            <attribute default="jvm" name="jvm"/>
+            <element name="customize" optional="true"/>
+            <sequential>
+                <java classname="@{classname}" dir="${work.dir}" fork="true">
+                    <jvmarg line="${endorsed.classpath.cmd.line.arg}"/>
+                    <jvmarg value="-Dfile.encoding=${runtime.encoding}"/>
+                    <redirector errorencoding="${runtime.encoding}" inputencoding="${runtime.encoding}" outputencoding="${runtime.encoding}"/>
+                    <jvmarg line="${run.jvmargs}"/>
+                    <jvmarg line="${run.jvmargs.ide}"/>
+                    <classpath>
+                        <path path="@{classpath}"/>
+                    </classpath>
+                    <syspropertyset>
+                        <propertyref prefix="run-sys-prop."/>
+                        <mapper from="run-sys-prop.*" to="*" type="glob"/>
+                    </syspropertyset>
+                    <customize/>
+                </java>
+            </sequential>
+        </macrodef>
+    </target>
+    <target name="-init-macrodef-copylibs">
+        <macrodef name="copylibs" uri="http://www.netbeans.org/ns/j2se-project/3">
+            <attribute default="${manifest.file}" name="manifest"/>
+            <element name="customize" optional="true"/>
+            <sequential>
+                <property location="${build.classes.dir}" name="build.classes.dir.resolved"/>
+                <pathconvert property="run.classpath.without.build.classes.dir">
+                    <path path="${run.classpath}"/>
+                    <map from="${build.classes.dir.resolved}" to=""/>
+                </pathconvert>
+                <pathconvert pathsep=" " property="jar.classpath">
+                    <path path="${run.classpath.without.build.classes.dir}"/>
+                    <chainedmapper>
+                        <flattenmapper/>
+                        <filtermapper>
+                            <replacestring from=" " to="%20"/>
+                        </filtermapper>
+                        <globmapper from="*" to="lib/*"/>
+                    </chainedmapper>
+                </pathconvert>
+                <taskdef classname="org.netbeans.modules.java.j2seproject.copylibstask.CopyLibs" classpath="${libs.CopyLibs.classpath}" name="copylibs"/>
+                <copylibs compress="${jar.compress}" excludeFromCopy="${copylibs.excludes}" index="${jar.index}" indexMetaInf="${jar.index.metainf}" jarfile="${dist.jar}" manifest="@{manifest}" rebase="${copylibs.rebase}" runtimeclasspath="${run.classpath.without.build.classes.dir}">
+                    <fileset dir="${build.classes.dir}" excludes="${dist.archive.excludes}"/>
+                    <manifest>
+                        <attribute name="Class-Path" value="${jar.classpath}"/>
+                        <customize/>
+                    </manifest>
+                </copylibs>
+            </sequential>
+        </macrodef>
+    </target>
+    <target name="-init-presetdef-jar">
+        <presetdef name="jar" uri="http://www.netbeans.org/ns/j2se-project/1">
+            <jar compress="${jar.compress}" index="${jar.index}" jarfile="${dist.jar}">
+                <j2seproject1:fileset dir="${build.classes.dir}" excludes="${dist.archive.excludes}"/>
+            </jar>
+        </presetdef>
+    </target>
+    <target name="-init-ap-cmdline-properties">
+        <property name="annotation.processing.enabled" value="true"/>
+        <property name="annotation.processing.processors.list" value=""/>
+        <property name="annotation.processing.processor.options" value=""/>
+        <property name="annotation.processing.run.all.processors" value="true"/>
+        <property name="javac.processorpath" value="${javac.classpath}"/>
+        <property name="javac.test.processorpath" value="${javac.test.classpath}"/>
+        <condition property="ap.supported.internal" value="true">
+            <not>
+                <matches pattern="1\.[0-5](\..*)?" string="${javac.source}"/>
+            </not>
+        </condition>
+    </target>
+    <target depends="-init-ap-cmdline-properties" if="ap.supported.internal" name="-init-ap-cmdline-supported">
+        <condition else="" property="ap.processors.internal" value="-processor ${annotation.processing.processors.list}">
+            <isfalse value="${annotation.processing.run.all.processors}"/>
+        </condition>
+        <condition else="" property="ap.proc.none.internal" value="-proc:none">
+            <isfalse value="${annotation.processing.enabled}"/>
+        </condition>
+    </target>
+    <target depends="-init-ap-cmdline-properties,-init-ap-cmdline-supported" name="-init-ap-cmdline">
+        <property name="ap.cmd.line.internal" value=""/>
+    </target>
+    <target depends="-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-test,-init-macrodef-test-debug,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar,-init-ap-cmdline" name="init"/>
+    <!--
+                ===================
+                COMPILATION SECTION
+                ===================
+            -->
+    <target name="-deps-jar-init" unless="built-jar.properties">
+        <property location="${build.dir}/built-jar.properties" name="built-jar.properties"/>
+        <delete file="${built-jar.properties}" quiet="true"/>
+    </target>
+    <target if="already.built.jar.${basedir}" name="-warn-already-built-jar">
+        <echo level="warn" message="Cycle detected: Facharbeit was already built"/>
+    </target>
+    <target depends="init,-deps-jar-init" name="deps-jar" unless="no.deps">
+        <mkdir dir="${build.dir}"/>
+        <touch file="${built-jar.properties}" verbose="false"/>
+        <property file="${built-jar.properties}" prefix="already.built.jar."/>
+        <antcall target="-warn-already-built-jar"/>
+        <propertyfile file="${built-jar.properties}">
+            <entry key="${basedir}" value=""/>
+        </propertyfile>
+    </target>
+    <target depends="init,-check-automatic-build,-clean-after-automatic-build" name="-verify-automatic-build"/>
+    <target depends="init" name="-check-automatic-build">
+        <available file="${build.classes.dir}/.netbeans_automatic_build" property="netbeans.automatic.build"/>
+    </target>
+    <target depends="init" if="netbeans.automatic.build" name="-clean-after-automatic-build">
+        <antcall target="clean"/>
+    </target>
+    <target depends="init,deps-jar" name="-pre-pre-compile">
+        <mkdir dir="${build.classes.dir}"/>
+    </target>
+    <target name="-pre-compile">
+        <!-- Empty placeholder for easier customization. -->
+        <!-- You can override this target in the ../build.xml file. -->
+    </target>
+    <target if="do.depend.true" name="-compile-depend">
+        <pathconvert property="build.generated.subdirs">
+            <dirset dir="${build.generated.sources.dir}" erroronmissingdir="false">
+                <include name="*"/>
+            </dirset>
+        </pathconvert>
+        <j2seproject3:depend srcdir="${src.dir}:${build.generated.subdirs}"/>
+    </target>
+    <target depends="init,deps-jar,-pre-pre-compile,-pre-compile, -copy-persistence-xml,-compile-depend" if="have.sources" name="-do-compile">
+        <j2seproject3:javac gensrcdir="${build.generated.sources.dir}"/>
+        <copy todir="${build.classes.dir}">
+            <fileset dir="${src.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
+        </copy>
+    </target>
+    <target if="has.persistence.xml" name="-copy-persistence-xml">
+        <mkdir dir="${build.classes.dir}/META-INF"/>
+        <copy todir="${build.classes.dir}/META-INF">
+            <fileset dir="${meta.inf.dir}" includes="persistence.xml orm.xml"/>
+        </copy>
+    </target>
+    <target name="-post-compile">
+        <!-- Empty placeholder for easier customization. -->
+        <!-- You can override this target in the ../build.xml file. -->
+    </target>
+    <target depends="init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile,-do-compile,-post-compile" description="Compile project." name="compile"/>
+    <target name="-pre-compile-single">
+        <!-- Empty placeholder for easier customization. -->
+        <!-- You can override this target in the ../build.xml file. -->
+    </target>
+    <target depends="init,deps-jar,-pre-pre-compile" name="-do-compile-single">
+        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
+        <j2seproject3:force-recompile/>
+        <j2seproject3:javac excludes="" gensrcdir="${build.generated.sources.dir}" includes="${javac.includes}" sourcepath="${src.dir}"/>
+    </target>
+    <target name="-post-compile-single">
+        <!-- Empty placeholder for easier customization. -->
+        <!-- You can override this target in the ../build.xml file. -->
+    </target>
+    <target depends="init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single" name="compile-single"/>
+    <!--
+                ====================
+                JAR BUILDING SECTION
+                ====================
+            -->
+    <target depends="init" name="-pre-pre-jar">
+        <dirname file="${dist.jar}" property="dist.jar.dir"/>
+        <mkdir dir="${dist.jar.dir}"/>
+    </target>
+    <target name="-pre-jar">
+        <!-- Empty placeholder for easier customization. -->
+        <!-- You can override this target in the ../build.xml file. -->
+    </target>
+    <target depends="init" if="do.archive" name="-do-jar-create-manifest" unless="manifest.available">
+        <tempfile deleteonexit="true" destdir="${build.dir}" property="tmp.manifest.file"/>
+        <touch file="${tmp.manifest.file}" verbose="false"/>
+    </target>
+    <target depends="init" if="do.archive+manifest.available" name="-do-jar-copy-manifest">
+        <tempfile deleteonexit="true" destdir="${build.dir}" property="tmp.manifest.file"/>
+        <copy file="${manifest.file}" tofile="${tmp.manifest.file}"/>
+    </target>
+    <target depends="init,-do-jar-create-manifest,-do-jar-copy-manifest" if="do.archive+main.class.available" name="-do-jar-set-mainclass">
+        <manifest file="${tmp.manifest.file}" mode="update">
+            <attribute name="Main-Class" value="${main.class}"/>
+        </manifest>
+    </target>
+    <target depends="init,-do-jar-create-manifest,-do-jar-copy-manifest" if="do.archive+profile.available" name="-do-jar-set-profile">
+        <manifest file="${tmp.manifest.file}" mode="update">
+            <attribute name="Profile" value="${javac.profile}"/>
+        </manifest>
+    </target>
+    <target depends="init,-do-jar-create-manifest,-do-jar-copy-manifest" if="do.archive+splashscreen.available" name="-do-jar-set-splashscreen">
+        <basename file="${application.splash}" property="splashscreen.basename"/>
+        <mkdir dir="${build.classes.dir}/META-INF"/>
+        <copy failonerror="false" file="${application.splash}" todir="${build.classes.dir}/META-INF"/>
+        <manifest file="${tmp.manifest.file}" mode="update">
+            <attribute name="SplashScreen-Image" value="META-INF/${splashscreen.basename}"/>
+        </manifest>
+    </target>
+    <target depends="init,-init-macrodef-copylibs,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen" if="do.mkdist" name="-do-jar-copylibs">
+        <j2seproject3:copylibs manifest="${tmp.manifest.file}"/>
+        <echo level="info">To run this application from the command line without Ant, try:</echo>
+        <property location="${dist.jar}" name="dist.jar.resolved"/>
+        <echo level="info">java -jar "${dist.jar.resolved}"</echo>
+    </target>
+    <target depends="init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen" if="do.archive" name="-do-jar-jar" unless="do.mkdist">
+        <j2seproject1:jar manifest="${tmp.manifest.file}"/>
+        <property location="${build.classes.dir}" name="build.classes.dir.resolved"/>
+        <property location="${dist.jar}" name="dist.jar.resolved"/>
+        <pathconvert property="run.classpath.with.dist.jar">
+            <path path="${run.classpath}"/>
+            <map from="${build.classes.dir.resolved}" to="${dist.jar.resolved}"/>
+        </pathconvert>
+        <condition else="" property="jar.usage.message" value="To run this application from the command line without Ant, try:${line.separator}${platform.java} -cp ${run.classpath.with.dist.jar} ${main.class}">
+            <isset property="main.class.available"/>
+        </condition>
+        <condition else="debug" property="jar.usage.level" value="info">
+            <isset property="main.class.available"/>
+        </condition>
+        <echo level="${jar.usage.level}" message="${jar.usage.message}"/>
+    </target>
+    <target depends="-do-jar-copylibs" if="do.archive" name="-do-jar-delete-manifest">
+        <delete>
+            <fileset file="${tmp.manifest.file}"/>
+        </delete>
+    </target>
+    <target depends="init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-jar,-do-jar-delete-manifest" name="-do-jar-without-libraries"/>
+    <target depends="init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-copylibs,-do-jar-delete-manifest" name="-do-jar-with-libraries"/>
+    <target name="-post-jar">
+        <!-- Empty placeholder for easier customization. -->
+        <!-- You can override this target in the ../build.xml file. -->
+    </target>
+    <target depends="init,compile,-pre-jar,-do-jar-without-libraries,-do-jar-with-libraries,-post-jar" name="-do-jar"/>
+    <target depends="init,compile,-pre-jar,-do-jar,-post-jar" description="Build JAR." name="jar"/>
+    <!--
+                =================
+                EXECUTION SECTION
+                =================
+            -->
+    <target depends="init,compile" description="Run a main class." name="run">
+        <j2seproject1:java>
+            <customize>
+                <arg line="${application.args}"/>
+            </customize>
+        </j2seproject1:java>
+    </target>
+    <target name="-do-not-recompile">
+        <property name="javac.includes.binary" value=""/>
+    </target>
+    <target depends="init,compile-single" name="run-single">
+        <fail unless="run.class">Must select one file in the IDE or set run.class</fail>
+        <j2seproject1:java classname="${run.class}"/>
+    </target>
+    <target depends="init,compile-test-single" name="run-test-with-main">
+        <fail unless="run.class">Must select one file in the IDE or set run.class</fail>
+        <j2seproject1:java classname="${run.class}" classpath="${run.test.classpath}"/>
+    </target>
+    <!--
+                =================
+                DEBUGGING SECTION
+                =================
+            -->
+    <target depends="init" if="netbeans.home" name="-debug-start-debugger">
+        <j2seproject1:nbjpdastart name="${debug.class}"/>
+    </target>
+    <target depends="init" if="netbeans.home" name="-debug-start-debugger-main-test">
+        <j2seproject1:nbjpdastart classpath="${debug.test.classpath}" name="${debug.class}"/>
+    </target>
+    <target depends="init,compile" name="-debug-start-debuggee">
+        <j2seproject3:debug>
+            <customize>
+                <arg line="${application.args}"/>
+            </customize>
+        </j2seproject3:debug>
+    </target>
+    <target depends="init,compile,-debug-start-debugger,-debug-start-debuggee" description="Debug project in IDE." if="netbeans.home" name="debug"/>
+    <target depends="init" if="netbeans.home" name="-debug-start-debugger-stepinto">
+        <j2seproject1:nbjpdastart stopclassname="${main.class}"/>
+    </target>
+    <target depends="init,compile,-debug-start-debugger-stepinto,-debug-start-debuggee" if="netbeans.home" name="debug-stepinto"/>
+    <target depends="init,compile-single" if="netbeans.home" name="-debug-start-debuggee-single">
+        <fail unless="debug.class">Must select one file in the IDE or set debug.class</fail>
+        <j2seproject3:debug classname="${debug.class}"/>
+    </target>
+    <target depends="init,compile-single,-debug-start-debugger,-debug-start-debuggee-single" if="netbeans.home" name="debug-single"/>
+    <target depends="init,compile-test-single" if="netbeans.home" name="-debug-start-debuggee-main-test">
+        <fail unless="debug.class">Must select one file in the IDE or set debug.class</fail>
+        <j2seproject3:debug classname="${debug.class}" classpath="${debug.test.classpath}"/>
+    </target>
+    <target depends="init,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test" if="netbeans.home" name="debug-test-with-main"/>
+    <target depends="init" name="-pre-debug-fix">
+        <fail unless="fix.includes">Must set fix.includes</fail>
+        <property name="javac.includes" value="${fix.includes}.java"/>
+    </target>
+    <target depends="init,-pre-debug-fix,compile-single" if="netbeans.home" name="-do-debug-fix">
+        <j2seproject1:nbjpdareload/>
+    </target>
+    <target depends="init,-pre-debug-fix,-do-debug-fix" if="netbeans.home" name="debug-fix"/>
+    <!--
+                =================
+                PROFILING SECTION
+                =================
+            -->
+    <!--
+                pre NB7.2 profiler integration
+            -->
+    <target depends="profile-init,compile" description="Profile a project in the IDE." if="profiler.info.jvmargs.agent" name="-profile-pre72">
+        <fail unless="netbeans.home">This target only works when run from inside the NetBeans IDE.</fail>
+        <nbprofiledirect>
+            <classpath>
+                <path path="${run.classpath}"/>
+            </classpath>
+        </nbprofiledirect>
+        <profile/>
+    </target>
+    <target depends="profile-init,compile-single" description="Profile a selected class in the IDE." if="profiler.info.jvmargs.agent" name="-profile-single-pre72">
+        <fail unless="profile.class">Must select one file in the IDE or set profile.class</fail>
+        <fail unless="netbeans.home">This target only works when run from inside the NetBeans IDE.</fail>
+        <nbprofiledirect>
+            <classpath>
+                <path path="${run.classpath}"/>
+            </classpath>
+        </nbprofiledirect>
+        <profile classname="${profile.class}"/>
+    </target>
+    <target depends="profile-init,compile-single" if="profiler.info.jvmargs.agent" name="-profile-applet-pre72">
+        <fail unless="netbeans.home">This target only works when run from inside the NetBeans IDE.</fail>
+        <nbprofiledirect>
+            <classpath>
+                <path path="${run.classpath}"/>
+            </classpath>
+        </nbprofiledirect>
+        <profile classname="sun.applet.AppletViewer">
+            <customize>
+                <arg value="${applet.url}"/>
+            </customize>
+        </profile>
+    </target>
+    <target depends="profile-init,compile-test-single" if="profiler.info.jvmargs.agent" name="-profile-test-single-pre72">
+        <fail unless="netbeans.home">This target only works when run from inside the NetBeans IDE.</fail>
+        <nbprofiledirect>
+            <classpath>
+                <path path="${run.test.classpath}"/>
+            </classpath>
+        </nbprofiledirect>
+        <junit dir="${profiler.info.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" jvm="${profiler.info.jvm}" showoutput="true">
+            <env key="${profiler.info.pathvar}" path="${profiler.info.agentpath}:${profiler.current.path}"/>
+            <jvmarg value="${profiler.info.jvmargs.agent}"/>
+            <jvmarg line="${profiler.info.jvmargs}"/>
+            <test name="${profile.class}"/>
+            <classpath>
+                <path path="${run.test.classpath}"/>
+            </classpath>
+            <syspropertyset>
+                <propertyref prefix="test-sys-prop."/>
+                <mapper from="test-sys-prop.*" to="*" type="glob"/>
+            </syspropertyset>
+            <formatter type="brief" usefile="false"/>
+            <formatter type="xml"/>
+        </junit>
+    </target>
+    <!--
+                end of pre NB72 profiling section
+            -->
+    <target if="netbeans.home" name="-profile-check">
+        <condition property="profiler.configured">
+            <or>
+                <contains casesensitive="true" string="${run.jvmargs.ide}" substring="-agentpath:"/>
+                <contains casesensitive="true" string="${run.jvmargs.ide}" substring="-javaagent:"/>
+            </or>
+        </condition>
+    </target>
+    <target depends="-profile-check,-profile-pre72" description="Profile a project in the IDE." if="profiler.configured" name="profile" unless="profiler.info.jvmargs.agent">
+        <startprofiler/>
+        <antcall target="run"/>
+    </target>
+    <target depends="-profile-check,-profile-single-pre72" description="Profile a selected class in the IDE." if="profiler.configured" name="profile-single" unless="profiler.info.jvmargs.agent">
+        <fail unless="run.class">Must select one file in the IDE or set run.class</fail>
+        <startprofiler/>
+        <antcall target="run-single"/>
+    </target>
+    <target depends="-profile-test-single-pre72" description="Profile a selected test in the IDE." name="profile-test-single"/>
+    <target depends="-profile-check" description="Profile a selected test in the IDE." if="profiler.configured" name="profile-test" unless="profiler.info.jvmargs">
+        <fail unless="test.includes">Must select some files in the IDE or set test.includes</fail>
+        <startprofiler/>
+        <antcall target="test-single"/>
+    </target>
+    <target depends="-profile-check" description="Profile a selected class in the IDE." if="profiler.configured" name="profile-test-with-main">
+        <fail unless="run.class">Must select one file in the IDE or set run.class</fail>
+        <startprofiler/>
+        <antcal target="run-test-with-main"/>
+    </target>
+    <target depends="-profile-check,-profile-applet-pre72" if="profiler.configured" name="profile-applet" unless="profiler.info.jvmargs.agent">
+        <fail unless="applet.url">Must select one file in the IDE or set applet.url</fail>
+        <startprofiler/>
+        <antcall target="run-applet"/>
+    </target>
+    <!--
+                ===============
+                JAVADOC SECTION
+                ===============
+            -->
+    <target depends="init" if="have.sources" name="-javadoc-build">
+        <mkdir dir="${dist.javadoc.dir}"/>
+        <condition else="" property="javadoc.endorsed.classpath.cmd.line.arg" value="-J${endorsed.classpath.cmd.line.arg}">
+            <and>
+                <isset property="endorsed.classpath.cmd.line.arg"/>
+                <not>
+                    <equals arg1="${endorsed.classpath.cmd.line.arg}" arg2=""/>
+                </not>
+            </and>
+        </condition>
+        <condition else="" property="bug5101868workaround" value="*.java">
+            <matches pattern="1\.[56](\..*)?" string="${java.version}"/>
+        </condition>
+        <javadoc additionalparam="-J-Dfile.encoding=${file.encoding} ${javadoc.additionalparam}" author="${javadoc.author}" charset="UTF-8" destdir="${dist.javadoc.dir}" docencoding="UTF-8" encoding="${javadoc.encoding.used}" failonerror="true" noindex="${javadoc.noindex}" nonavbar="${javadoc.nonavbar}" notree="${javadoc.notree}" private="${javadoc.private}" source="${javac.source}" splitindex="${javadoc.splitindex}" use="${javadoc.use}" useexternalfile="true" version="${javadoc.version}" windowtitle="${javadoc.windowtitle}">
+            <classpath>
+                <path path="${javac.classpath}"/>
+            </classpath>
+            <fileset dir="${src.dir}" excludes="${bug5101868workaround},${excludes}" includes="${includes}">
+                <filename name="**/*.java"/>
+            </fileset>
+            <fileset dir="${build.generated.sources.dir}" erroronmissingdir="false">
+                <include name="**/*.java"/>
+                <exclude name="*.java"/>
+            </fileset>
+            <arg line="${javadoc.endorsed.classpath.cmd.line.arg}"/>
+        </javadoc>
+        <copy todir="${dist.javadoc.dir}">
+            <fileset dir="${src.dir}" excludes="${excludes}" includes="${includes}">
+                <filename name="**/doc-files/**"/>
+            </fileset>
+            <fileset dir="${build.generated.sources.dir}" erroronmissingdir="false">
+                <include name="**/doc-files/**"/>
+            </fileset>
+        </copy>
+    </target>
+    <target depends="init,-javadoc-build" if="netbeans.home" name="-javadoc-browse" unless="no.javadoc.preview">
+        <nbbrowse file="${dist.javadoc.dir}/index.html"/>
+    </target>
+    <target depends="init,-javadoc-build,-javadoc-browse" description="Build Javadoc." name="javadoc"/>
+    <!--
+                =========================
+                TEST COMPILATION SECTION
+                =========================
+            -->
+    <target depends="init,compile" if="have.tests" name="-pre-pre-compile-test">
+        <mkdir dir="${build.test.classes.dir}"/>
+    </target>
+    <target name="-pre-compile-test">
+        <!-- Empty placeholder for easier customization. -->
+        <!-- You can override this target in the ../build.xml file. -->
+    </target>
+    <target if="do.depend.true" name="-compile-test-depend">
+        <j2seproject3:depend classpath="${javac.test.classpath}" destdir="${build.test.classes.dir}" srcdir="${test.src.dir}"/>
+    </target>
+    <target depends="init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test,-compile-test-depend" if="have.tests" name="-do-compile-test">
+        <j2seproject3:javac apgeneratedsrcdir="${build.test.classes.dir}" classpath="${javac.test.classpath}" debug="true" destdir="${build.test.classes.dir}" processorpath="${javac.test.processorpath}" srcdir="${test.src.dir}"/>
+        <copy todir="${build.test.classes.dir}">
+            <fileset dir="${test.src.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
+        </copy>
+    </target>
+    <target name="-post-compile-test">
+        <!-- Empty placeholder for easier customization. -->
+        <!-- You can override this target in the ../build.xml file. -->
+    </target>
+    <target depends="init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test" name="compile-test"/>
+    <target name="-pre-compile-test-single">
+        <!-- Empty placeholder for easier customization. -->
+        <!-- You can override this target in the ../build.xml file. -->
+    </target>
+    <target depends="init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test-single" if="have.tests" name="-do-compile-test-single">
+        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
+        <j2seproject3:force-recompile destdir="${build.test.classes.dir}"/>
+        <j2seproject3:javac apgeneratedsrcdir="${build.test.classes.dir}" classpath="${javac.test.classpath}" debug="true" destdir="${build.test.classes.dir}" excludes="" includes="${javac.includes}" processorpath="${javac.test.processorpath}" sourcepath="${test.src.dir}" srcdir="${test.src.dir}"/>
+        <copy todir="${build.test.classes.dir}">
+            <fileset dir="${test.src.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
+        </copy>
+    </target>
+    <target name="-post-compile-test-single">
+        <!-- Empty placeholder for easier customization. -->
+        <!-- You can override this target in the ../build.xml file. -->
+    </target>
+    <target depends="init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single" name="compile-test-single"/>
+    <!--
+                =======================
+                TEST EXECUTION SECTION
+                =======================
+            -->
+    <target depends="init" if="have.tests" name="-pre-test-run">
+        <mkdir dir="${build.test.results.dir}"/>
+    </target>
+    <target depends="init,compile-test,-pre-test-run" if="have.tests" name="-do-test-run">
+        <j2seproject3:test includes="${includes}" testincludes="**/*Test.java"/>
+    </target>
+    <target depends="init,compile-test,-pre-test-run,-do-test-run" if="have.tests" name="-post-test-run">
+        <fail if="tests.failed" unless="ignore.failing.tests">Some tests failed; see details above.</fail>
+    </target>
+    <target depends="init" if="have.tests" name="test-report"/>
+    <target depends="init" if="netbeans.home+have.tests" name="-test-browse"/>
+    <target depends="init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse" description="Run unit tests." name="test"/>
+    <target depends="init" if="have.tests" name="-pre-test-run-single">
+        <mkdir dir="${build.test.results.dir}"/>
+    </target>
+    <target depends="init,compile-test-single,-pre-test-run-single" if="have.tests" name="-do-test-run-single">
+        <fail unless="test.includes">Must select some files in the IDE or set test.includes</fail>
+        <j2seproject3:test excludes="" includes="${test.includes}" testincludes="${test.includes}"/>
+    </target>
+    <target depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single" if="have.tests" name="-post-test-run-single">
+        <fail if="tests.failed" unless="ignore.failing.tests">Some tests failed; see details above.</fail>
+    </target>
+    <target depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single" description="Run single unit test." name="test-single"/>
+    <target depends="init,compile-test-single,-pre-test-run-single" if="have.tests" name="-do-test-run-single-method">
+        <fail unless="test.class">Must select some files in the IDE or set test.class</fail>
+        <fail unless="test.method">Must select some method in the IDE or set test.method</fail>
+        <j2seproject3:test excludes="" includes="${javac.includes}" testincludes="${test.class}" testmethods="${test.method}"/>
+    </target>
+    <target depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single-method" if="have.tests" name="-post-test-run-single-method">
+        <fail if="tests.failed" unless="ignore.failing.tests">Some tests failed; see details above.</fail>
+    </target>
+    <target depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single-method,-post-test-run-single-method" description="Run single unit test." name="test-single-method"/>
+    <!--
+                =======================
+                TEST DEBUGGING SECTION
+                =======================
+            -->
+    <target depends="init,compile-test-single,-pre-test-run-single" if="have.tests" name="-debug-start-debuggee-test">
+        <fail unless="test.class">Must select one file in the IDE or set test.class</fail>
+        <j2seproject3:test-debug excludes="" includes="${javac.includes}" testClass="${test.class}" testincludes="${javac.includes}"/>
+    </target>
+    <target depends="init,compile-test-single,-pre-test-run-single" if="have.tests" name="-debug-start-debuggee-test-method">
+        <fail unless="test.class">Must select one file in the IDE or set test.class</fail>
+        <fail unless="test.method">Must select some method in the IDE or set test.method</fail>
+        <j2seproject3:test-debug excludes="" includes="${javac.includes}" testClass="${test.class}" testMethod="${test.method}" testincludes="${test.class}" testmethods="${test.method}"/>
+    </target>
+    <target depends="init,compile-test" if="netbeans.home+have.tests" name="-debug-start-debugger-test">
+        <j2seproject1:nbjpdastart classpath="${debug.test.classpath}" name="${test.class}"/>
+    </target>
+    <target depends="init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test" name="debug-test"/>
+    <target depends="init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test-method" name="debug-test-method"/>
+    <target depends="init,-pre-debug-fix,compile-test-single" if="netbeans.home" name="-do-debug-fix-test">
+        <j2seproject1:nbjpdareload dir="${build.test.classes.dir}"/>
+    </target>
+    <target depends="init,-pre-debug-fix,-do-debug-fix-test" if="netbeans.home" name="debug-fix-test"/>
+    <!--
+                =========================
+                APPLET EXECUTION SECTION
+                =========================
+            -->
+    <target depends="init,compile-single" name="run-applet">
+        <fail unless="applet.url">Must select one file in the IDE or set applet.url</fail>
+        <j2seproject1:java classname="sun.applet.AppletViewer">
+            <customize>
+                <arg value="${applet.url}"/>
+            </customize>
+        </j2seproject1:java>
+    </target>
+    <!--
+                =========================
+                APPLET DEBUGGING  SECTION
+                =========================
+            -->
+    <target depends="init,compile-single" if="netbeans.home" name="-debug-start-debuggee-applet">
+        <fail unless="applet.url">Must select one file in the IDE or set applet.url</fail>
+        <j2seproject3:debug classname="sun.applet.AppletViewer">
+            <customize>
+                <arg value="${applet.url}"/>
+            </customize>
+        </j2seproject3:debug>
+    </target>
+    <target depends="init,compile-single,-debug-start-debugger,-debug-start-debuggee-applet" if="netbeans.home" name="debug-applet"/>
+    <!--
+                ===============
+                CLEANUP SECTION
+                ===============
+            -->
+    <target name="-deps-clean-init" unless="built-clean.properties">
+        <property location="${build.dir}/built-clean.properties" name="built-clean.properties"/>
+        <delete file="${built-clean.properties}" quiet="true"/>
+    </target>
+    <target if="already.built.clean.${basedir}" name="-warn-already-built-clean">
+        <echo level="warn" message="Cycle detected: Facharbeit was already built"/>
+    </target>
+    <target depends="init,-deps-clean-init" name="deps-clean" unless="no.deps">
+        <mkdir dir="${build.dir}"/>
+        <touch file="${built-clean.properties}" verbose="false"/>
+        <property file="${built-clean.properties}" prefix="already.built.clean."/>
+        <antcall target="-warn-already-built-clean"/>
+        <propertyfile file="${built-clean.properties}">
+            <entry key="${basedir}" value=""/>
+        </propertyfile>
+    </target>
+    <target depends="init" name="-do-clean">
+        <delete dir="${build.dir}"/>
+        <delete dir="${dist.dir}" followsymlinks="false" includeemptydirs="true"/>
+    </target>
+    <target name="-post-clean">
+        <!-- Empty placeholder for easier customization. -->
+        <!-- You can override this target in the ../build.xml file. -->
+    </target>
+    <target depends="init,deps-clean,-do-clean,-post-clean" description="Clean build products." name="clean"/>
+    <target name="-check-call-dep">
+        <property file="${call.built.properties}" prefix="already.built."/>
+        <condition property="should.call.dep">
+            <and>
+                <not>
+                    <isset property="already.built.${call.subproject}"/>
+                </not>
+                <available file="${call.script}"/>
+            </and>
+        </condition>
+    </target>
+    <target depends="-check-call-dep" if="should.call.dep" name="-maybe-call-dep">
+        <ant antfile="${call.script}" inheritall="false" target="${call.target}">
+            <propertyset>
+                <propertyref prefix="transfer."/>
+                <mapper from="transfer.*" to="*" type="glob"/>
+            </propertyset>
+        </ant>
+    </target>
+</project>
diff --git a/nbproject/genfiles.properties b/nbproject/genfiles.properties
new file mode 100644
index 0000000..569caee
--- /dev/null
+++ b/nbproject/genfiles.properties
@@ -0,0 +1,8 @@
+build.xml.data.CRC32=e8463032
+build.xml.script.CRC32=aba60c5f
+build.xml.stylesheet.CRC32=8064a381@1.74.2.48
+# This file is used by a NetBeans-based IDE to track changes in generated files such as build-impl.xml.
+# Do not edit this file. You may delete it but then the IDE will never regenerate such files for you.
+nbproject/build-impl.xml.data.CRC32=e8463032
+nbproject/build-impl.xml.script.CRC32=35ee05c5
+nbproject/build-impl.xml.stylesheet.CRC32=876e7a8f@1.74.2.48
diff --git a/nbproject/project.properties b/nbproject/project.properties
new file mode 100644
index 0000000..42f0777
--- /dev/null
+++ b/nbproject/project.properties
@@ -0,0 +1,74 @@
+annotation.processing.enabled=true
+annotation.processing.enabled.in.editor=false
+annotation.processing.processor.options=
+annotation.processing.processors.list=
+annotation.processing.run.all.processors=true
+annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
+build.classes.dir=${build.dir}/classes
+build.classes.excludes=**/*.java,**/*.form
+# This directory is removed when the project is cleaned:
+build.dir=build
+build.generated.dir=${build.dir}/generated
+build.generated.sources.dir=${build.dir}/generated-sources
+# Only compile against the classpath explicitly listed here:
+build.sysclasspath=ignore
+build.test.classes.dir=${build.dir}/test/classes
+build.test.results.dir=${build.dir}/test/results
+# Uncomment to specify the preferred debugger connection transport:
+#debug.transport=dt_socket
+debug.classpath=\
+    ${run.classpath}
+debug.test.classpath=\
+    ${run.test.classpath}
+# Files in build.classes.dir which should be excluded from distribution jar
+dist.archive.excludes=
+# This directory is removed when the project is cleaned:
+dist.dir=dist
+dist.jar=${dist.dir}/Facharbeit.jar
+dist.javadoc.dir=${dist.dir}/javadoc
+excludes=
+includes=**
+jar.compress=false
+javac.classpath=\
+    ${libs.MySQLDriver.classpath}
+# Space-separated list of extra javac options
+javac.compilerargs=
+javac.deprecation=false
+javac.processorpath=\
+    ${javac.classpath}
+javac.source=1.7
+javac.target=1.7
+javac.test.classpath=\
+    ${javac.classpath}:\
+    ${build.classes.dir}
+javac.test.processorpath=\
+    ${javac.test.classpath}
+javadoc.additionalparam=
+javadoc.author=false
+javadoc.encoding=${source.encoding}
+javadoc.noindex=false
+javadoc.nonavbar=false
+javadoc.notree=false
+javadoc.private=false
+javadoc.splitindex=true
+javadoc.use=true
+javadoc.version=false
+javadoc.windowtitle=
+main.class=com.facharbeit.main.Application
+manifest.file=manifest.mf
+meta.inf.dir=${src.dir}/META-INF
+mkdist.disabled=false
+platform.active=default_platform
+run.classpath=\
+    ${javac.classpath}:\
+    ${build.classes.dir}
+# Space-separated list of JVM arguments used when running the project.
+# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.
+# To set system properties for unit tests define test-sys-prop.name=value:
+run.jvmargs=
+run.test.classpath=\
+    ${javac.test.classpath}:\
+    ${build.test.classes.dir}
+source.encoding=UTF-8
+src.dir=src
+test.src.dir=test
diff --git a/nbproject/project.xml b/nbproject/project.xml
new file mode 100644
index 0000000..27e0648
--- /dev/null
+++ b/nbproject/project.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://www.netbeans.org/ns/project/1">
+    <type>org.netbeans.modules.java.j2seproject</type>
+    <configuration>
+        <data xmlns="http://www.netbeans.org/ns/j2se-project/3">
+            <name>Facharbeit</name>
+            <source-roots>
+                <root id="src.dir"/>
+            </source-roots>
+            <test-roots>
+                <root id="test.src.dir"/>
+            </test-roots>
+        </data>
+    </configuration>
+</project>
diff --git a/src/com/facharbeit/io/Reader.java b/src/com/facharbeit/io/Reader.java
new file mode 100644
index 0000000..9121f60
--- /dev/null
+++ b/src/com/facharbeit/io/Reader.java
@@ -0,0 +1,135 @@
+package com.facharbeit.io;
+
+import com.facharbeit.tools.Logger;
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileReader;
+import java.io.IOException;
+
+/**
+ * Lies ganze Text-Dateien aus.
+ */
+public class Reader
+{
+    /**
+     * Name der Datei.
+     */
+    private String filename;
+
+    /**
+     * Erstellt einen neuen Reader.
+     * @param pFilename Name der Datei
+     */
+    public Reader(String pFilename)
+    {
+        filename = pFilename;
+    }
+
+    /**
+     * Liest eine Zeile der Datei.
+     * @param line Zeile, die gelesen werden soll
+     * @return Inhalt dieser Zeile
+     */
+    public String read(int line)
+    {
+        try(BufferedReader reader = new BufferedReader(new FileReader("Data/" + filename)))
+        {
+            for(int i = 0; i < line; i++) //Läuft Zeilen durch bis die gewünschte Zeile erreicht ist.
+                reader.readLine();
+
+            return reader.readLine();
+        } catch(IOException e)
+        {
+            Logger.log("\"" + filename + "\" konnte nicht geladen werden.", 2);
+            return "";
+        }
+    }
+
+    /**
+     * Liest ganze Datei aus.
+     * @return Ganze Datei als String Array
+     */
+    public String[] readAll()
+    {
+        int length = getLines();
+        String[] data = new String[length];
+
+        try(BufferedReader reader = new BufferedReader(new FileReader("Data/" + filename)))
+        {
+            for(int i = 0; i < length; i++)
+                data[i] = reader.readLine();
+
+            reader.close();
+            return data;
+        } catch(IOException ex)
+        {
+            Logger.log("\"" + filename + "\" konnte nicht geladen werden.", 2);
+            data[0] = "";
+            return data;
+        }
+    }
+
+    /**
+     * Konvertiert das Array in einen einzelnen String.
+     * @return Ganze Datei als String
+     */
+    @Override
+    public String toString()
+    {
+        String data = "";
+        String[] file = readAll();
+
+        for(int i = 0; i < file.length - 1; i++)
+            data += "\n" + file[i];
+
+        return data;
+    }
+
+    /**
+     * Liest eine Zeile als Zahl.
+     * @param line Zeile, die gelesen werden soll
+     * @return Zahl, die die angegebene Zeile repräsentiert
+     */
+    public int readAsNumber(int line)
+    {
+        try
+        {
+            return Integer.parseInt(read(line));
+        } catch(NumberFormatException ex)
+        {
+            System.out.println("ZEILE AUS \"" + filename + "\" KONNTE NICHT ALS ZAHL GELESEN WERDEN!");
+            return -1;
+        }
+    }
+
+    /**
+     * Prüft ob die Datei existiert.
+     * @return Existiert die Datei?
+     */
+    public boolean exists()
+    {
+        File file = new File("Data/" + filename);
+        return file.exists();
+    }
+
+    /**
+     * Gibt die Zeilenanzahl zurück.
+     * @return Anzahl der Zeilen
+     */
+    public int getLines()
+    {
+        try(BufferedReader reader = new BufferedReader(new FileReader("Data/" + filename)))
+        {
+            int lines = 0;
+            while(reader.readLine() != null)
+                lines++;
+
+            reader.close();
+            return lines;
+        } catch(IOException ex)
+        {
+            Logger.log("\"" + filename + "\" konnte nicht geladen werden.", 2);
+            return -1;
+        }
+    }
+}
diff --git a/src/com/facharbeit/io/SettingHandler.java b/src/com/facharbeit/io/SettingHandler.java
new file mode 100644
index 0000000..f83272f
--- /dev/null
+++ b/src/com/facharbeit/io/SettingHandler.java
@@ -0,0 +1,131 @@
+package com.facharbeit.io;
+
+import java.awt.Color;
+import java.awt.event.ActionEvent;
+import java.awt.event.ItemEvent;
+import java.util.ArrayList;
+import java.util.Arrays;
+import javax.swing.JColorChooser;
+import javax.swing.JComboBox;
+import javax.swing.JPanel;
+import javax.swing.JTextArea;
+import javax.swing.JTextField;
+
+public class SettingHandler
+{
+    @SuppressWarnings("empty-statement")
+    public static void savePathBtnActionPerformed(JTextField sourceTxt, JTextField backupTxt, JTextArea destArea, ActionEvent evt)
+    {
+        saveIfNotNull(sourceTxt, "sourcePath");
+        saveIfNotNull(backupTxt, "backupPath");
+
+        ArrayList<String> destPaths = new ArrayList<String>();
+        destPaths.addAll(Arrays.asList(destArea.getText().split("\n")));
+
+        for(int i = 0; Settings.delete("destPath" + (i + 1)); i++);
+
+        if(!destArea.getText().equals(""))
+            for(int i = 0; i < destPaths.size(); i++)
+                Settings.save("destPath" + (i + 1), destPaths.get(i));
+    }
+
+    public static void setSpeedPlanBtnActionPerformed(JTextField speedPlanTxt, ActionEvent evt)
+    {
+        Settings.save("planSpeed", speedPlanTxt.getText());
+    }
+
+    public static void setSpeedMotdBtnActionPerformed(JTextField speedMotdTxt, ActionEvent evt)
+    {
+        Settings.save("motdSpeed", speedMotdTxt.getText());
+    }
+
+    public static void addColorBtnActionPerformed(JColorChooser colorChooser, JTextField colorNameTxt, JComboBox colorPlanCombo, JComboBox colorMotdCombo, ActionEvent evt)
+    {
+        Color c = JColorChooser.showDialog(colorChooser, "Neue Farbe anlegen", Color.BLUE);
+        Settings.save("color" + colorNameTxt.getText(), "#" + Integer.toHexString(c.getRGB()).substring(2));
+
+        loadColors(colorPlanCombo, colorMotdCombo);
+    }
+
+    public static void deleteColorBtnActionPerformed(JTextField colorNameTxt, JComboBox colorPlanCombo, JComboBox colorMotdCombo, ActionEvent evt)
+    {
+        Settings.delete("color" + colorNameTxt.getText());
+
+        loadColors(colorPlanCombo, colorMotdCombo);
+    }
+
+    public static void colorPlanComboItemStateChanged(JPanel colorPlanPanel, JComboBox colorPlanCombo, ItemEvent evt)
+    {
+        if(evt.getStateChange() == ItemEvent.SELECTED)
+            colorPlanPanel.setBackground(Color.decode(Settings.load("color" + colorPlanCombo.getSelectedItem().toString())));
+    }
+
+    public static void setColorPlanBtnActionPerformed(JComboBox colorPlanCombo, ActionEvent evt)
+    {
+        Settings.save("colorPlan", colorPlanCombo.getSelectedItem().toString());
+    }
+
+    public static void colorMotdComboItemStateChanged(JPanel colorMotdPanel, JComboBox colorMotdCombo, ItemEvent evt)
+    {
+        if(evt.getStateChange() == ItemEvent.SELECTED)
+            colorMotdPanel.setBackground(Color.decode(Settings.load("color" + colorMotdCombo.getSelectedItem().toString())));
+    }
+
+    public static void setColorMotdBtnActionPerformed(JComboBox colorMotdCombo, ActionEvent evt)
+    {
+        Settings.save("colorMotd", colorMotdCombo.getSelectedItem().toString());
+    }
+
+    public static void loadSettings(JTextField sourceTxt, JTextField backupTxt, JTextArea destArea, JTextField speedPlanTxt, JTextField speedMotdTxt, JComboBox colorPlanCombo, JComboBox colorMotdCombo)
+    {
+        load(sourceTxt, "sourcePath");
+        load(backupTxt, "backupPath");
+
+        String name = "destPath1";
+        if(Settings.getLineOf(name) == -1)
+            Settings.load(name);
+
+        for(int i = 1; Settings.getLineOf(name) != -1; i++)
+        {
+            String s = Settings.load(name);
+            destArea.append(s + "\n");
+            name = "destPath" + (i + 1);
+        }
+
+        load(speedPlanTxt, "planSpeed");
+        load(speedMotdTxt, "motdSpeed");
+
+        loadColors(colorPlanCombo, colorMotdCombo);
+    }
+
+    private static void loadColors(JComboBox colorPlanCombo, JComboBox colorMotdCombo)
+    {
+        colorPlanCombo.removeAllItems();
+        colorMotdCombo.removeAllItems();
+
+        String[] colors = Settings.giveMultiple("color");
+        for(String s : colors)
+            if(!s.equals("colorPlan") && !s.equals("colorMotd"))
+            {
+                colorPlanCombo.addItem(s.substring(5));
+                colorMotdCombo.addItem(s.substring(5));
+
+            }
+
+        colorPlanCombo.setSelectedItem(Settings.load("colorPlan"));
+        colorMotdCombo.setSelectedItem(Settings.load("colorMotd"));
+    }
+
+    private static void saveIfNotNull(JTextField field, String name)
+    {
+        if(field.getText().equals(""))
+            Settings.delete(name);
+        else
+            Settings.save(name, field.getText());
+    }
+
+    private static void load(JTextField field, String name)
+    {
+        field.setText(Settings.load(name));
+    }
+}
diff --git a/src/com/facharbeit/io/Settings.java b/src/com/facharbeit/io/Settings.java
new file mode 100644
index 0000000..1fe0707
--- /dev/null
+++ b/src/com/facharbeit/io/Settings.java
@@ -0,0 +1,104 @@
+package com.facharbeit.io;
+
+import com.facharbeit.tools.Logger;
+import java.util.ArrayList;
+import java.util.Arrays;
+
+public class Settings
+{
+    private static Writer writer;
+    private static Reader reader;
+
+    public static void init()
+    {
+        writer = new Writer("settings.ini");
+        reader = new Reader("settings.ini");
+
+        if(!reader.exists())
+            writer.create();
+        else
+            Logger.log("\"settings.ini\" wurde geladen.", 0);
+    }
+
+    public static void save(String name, String setting)
+    {
+        int line = getLineOf(name);
+
+        String settings = name + ": \"" + setting + "\"";
+        if(line == -1)
+            writer.write(reader.getLines(), settings);
+        else
+            writer.write(line, settings);
+
+        Logger.log("Einstellung ' " + settings + " ' gespeichert.", 0);
+    }
+
+    public static String load(String name)
+    {
+        int line = getLineOf(name);
+
+        if(line == -1)
+        {
+            Logger.log("Einstellung ' " + name + " ' nicht vorhanden.", 1);
+            return "";
+        } else
+        {
+            String setting = reader.read(line);
+            setting = setting.replaceFirst(name + ": \"", "");
+            setting = setting.substring(0, setting.length() - 1);
+
+            Logger.log("Einstellung ' " + name + ": \"" + setting + "\"" + " ' geladen.", 0);
+            return setting;
+        }
+    }
+
+    public static String[] giveMultiple(String name)
+    {
+        ArrayList<String> names = new ArrayList<String>();
+        String[] file = reader.readAll();
+
+        for(String s : file)
+            if(s.startsWith(name))
+                names.add(s.split(": \"")[0].trim());
+
+        return names.toArray(new String[]
+        {
+        });
+    }
+
+    public static boolean delete(String name)
+    {
+        int line = getLineOf(name);
+
+        if(line != -1)
+        {
+            ArrayList<String> content = new ArrayList<String>();
+            content.addAll(Arrays.asList(reader.readAll()));
+            content.remove(line);
+
+            writer.writeAll(content.toArray(new String[]
+            {
+            }));
+
+            Logger.log("Einstellung ' " + name + " ' gelöscht.", 0);
+            return true;
+        }
+
+        return false;
+    }
+
+    public static int getLineOf(String name)
+    {
+        String[] content = reader.readAll();
+        int line = -1;
+
+        for(int i = 0; i < content.length; i++)
+            if(content[i] != null && content[i].startsWith(name))
+            {
+                line = i;
+                break;
+            }
+
+        return line;
+    }
+}
diff --git a/src/com/facharbeit/io/Writer.java b/src/com/facharbeit/io/Writer.java
new file mode 100644
index 0000000..85c283f
--- /dev/null
+++ b/src/com/facharbeit/io/Writer.java
@@ -0,0 +1,102 @@
+package com.facharbeit.io;
+
+import com.facharbeit.tools.Logger;
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.PrintWriter;
+
+/**
+ * Klasse zum schreiben ganzer Text-Dateien.
+ */
+public class Writer
+{
+
+    /**
+     * Name der Datei.
+     */
+    private String filename;
+
+    /**
+     * Erstellt einen neuen Schreiber.
+     * @param pFilename Name der Datei
+     */
+    public Writer(String pFilename)
+    {
+        filename = pFilename;
+    }
+
+    /**
+     * Schreibt eine ganze Datei neu.
+     * @param data Daten, die in die Datei geschrieben werder sollen
+     */
+    public void writeAll(String[] data)
+    {
+        try(PrintWriter writer = new PrintWriter(new FileOutputStream("Data/" + filename)))
+        {
+            for(int i = 0; i < data.length; i++)
+                if(i + 1 < data.length)
+                    writer.println(data[i]);
+                else
+                    writer.print(data[i]);
+        } catch(IOException ex)
+        {
+            Logger.log("\"" + filename + "\" konnte nicht geladen werden.", 2);
+        }
+    }
+
+    /**
+     * Schreibt nur eine Zeile einer Datei neu.
+     * @param line    Zeile, die neu geschrieben werden soll
+     * @param content Text, der geschrieben werden soll
+     */
+    public void write(int line, String content)
+    {
+        Reader reader = new Reader(filename);
+        String[] temp = reader.readAll();
+        String[] data = new String[line + 1];
+
+        for(int i = 0; i < data.length; i++)
+            if(i < temp.length)
+                data[i] = temp[i];
+            else
+                data[i] = "";
+
+        data[line] = content;
+
+        writeAll(data);
+    }
+
+    /**
+     * Erstellt eine neue Datei.
+     */
+    public void create()
+    {
+//        try
+//        {
+//            PrintWriter writer = new PrintWriter(new FileOutputStream("Data/" + filename));
+//            writer.close();
+//
+//            Logger.log("\"" + filename + "\" wurde erstellt.", 0);
+//        } catch(IOException ex)
+//        {
+//            Logger.log("\"" + filename + "\" konnte nicht erstellt werden.", 2);
+//        }
+
+        File thisFile = new File("Data/");
+
+        thisFile.mkdirs();
+
+        thisFile = new File("Data/" + filename);
+
+        try
+        {
+            if(thisFile.createNewFile())
+                Logger.log("\"" + filename + "\" wurde erstellt.", 0);
+        } catch(IOException ex)
+        {
+            Logger.log("\"" + filename + "\" konnte nicht erstellt werden.", 2);
+        }
+
+    }
+}
diff --git a/src/com/facharbeit/listener/TimeHandler.java b/src/com/facharbeit/listener/TimeHandler.java
new file mode 100644
index 0000000..f98dbc9
--- /dev/null
+++ b/src/com/facharbeit/listener/TimeHandler.java
@@ -0,0 +1,19 @@
+/*package com.facharbeit.listener;
+
+public interface TimeHandler
+{
+    // long time is temporary
+    void lessonOne(long time);
+    void lessonTwo(long time);
+    void lessonThree(long time);
+    void lessonFour(long time);
+    void lessonFive(long time);
+    void lessonSix(long time);
+    void lessonSeven(long time);
+    void lessonEight(long time);
+    void lessonNine(long time);
+    void lessonTen(long time);
+
+
+}
+*/
\ No newline at end of file
diff --git a/src/com/facharbeit/listener/TimeListener.java b/src/com/facharbeit/listener/TimeListener.java
new file mode 100644
index 0000000..a659129
--- /dev/null
+++ b/src/com/facharbeit/listener/TimeListener.java
@@ -0,0 +1,71 @@
+/*package com.facharbeit.listener;
+
+import com.facharbeit.main.Application;
+import java.util.Calendar;
+
+public class TimeListener extends Thread
+{
+    private Application app;
+
+    private final int ONE = 520;
+    private final int TWO = 565;
+    private final int THREE = 630;
+    private final int FOUR = 675;
+    private final int FIVE = 735;
+    private final int SIX = 785;
+    private final int SEVEN = 885;
+    private final int EIGHT = 930;
+    private final int NINE = 980;
+    private final int TEN = 1025;
+
+    public TimeListener(Application pApp)
+    {
+        app = pApp;
+        this.start();
+    }
+
+    @Override
+    public void run()
+    {
+        while(true)
+        {
+            checkTime();
+
+            try
+            {
+                Thread.sleep(60000);
+            } catch(InterruptedException ex)
+            {
+                System.out.println(ex);
+            }
+        }
+    }
+
+    private void checkTime()
+    {
+        Calendar calendar = Calendar.getInstance();
+        long time = calendar.get(Calendar.HOUR_OF_DAY) * 60 + calendar.get(Calendar.MINUTE);
+
+        if(time > TEN)
+            app.lessonTen(time);
+        else if(time > NINE)
+            app.lessonNine(time);
+        else if(time > EIGHT)
+            app.lessonEight(time);
+        else if(time > SEVEN)
+            app.lessonSeven(time);
+        else if(time > SIX)
+            app.lessonSix(time);
+        else if(time > FIVE)
+            app.lessonFive(time);
+        else if(time > FOUR)
+            app.lessonFour(time);
+        else if(time > THREE)
+            app.lessonThree(time);
+        else if(time > TWO)
+            app.lessonTwo(time);
+        else if(time > ONE)
+            app.lessonOne(time);
+    }
+}
+*/
\ No newline at end of file
diff --git a/src/com/facharbeit/main/Application.java b/src/com/facharbeit/main/Application.java
new file mode 100644
index 0000000..06c2c43
--- /dev/null
+++ b/src/com/facharbeit/main/Application.java
@@ -0,0 +1,130 @@
+package com.facharbeit.main;
+
+import com.facharbeit.io.SettingHandler;
+import com.facharbeit.io.Settings;
+import com.facharbeit.tools.Logger;
+import java.lang.reflect.Method;
+import java.util.ArrayList;
+import java.util.Random;
+import javax.swing.UIManager;
+import javax.swing.UnsupportedLookAndFeelException;
+
+/**
+ * Verwaltet alle Aktionen, die im Programm geschehen sollen.
+ */
+public class Application
+{
+
+    /**
+     * Das Fenster des Programms.
+     */
+    private Frame frame;
+
+    /**
+     * Gibt an ob die Anwendung laufen soll.
+     */
+    private boolean running;
+
+    private static ArrayList<QueueElement> queue;
+    private static boolean doingStuff;
+
+    /**
+     * Erstellt die Anwendung.
+     */
+    public Application()
+    {
+        queue = new ArrayList<QueueElement>();
+
+        try
+        {
+            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); // Bestimmt das Aussehen der Anwendung
+        } catch(ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex)
+        {
+        }
+
+        frame = new Frame();
+        frame.setVisible(true);
+
+        Logger.init(frame.getStatusPane());
+        Settings.init();
+
+        frame.loadSettings();
+
+        running = true;
+    }
+
+    /**
+     * Ruft die "main-Methode" der Anwendung auf.
+     * @param args Parameter, die beim Aufruf des Programms übergeben wurden
+     */
+    public static void main(String[] args)
+    {
+        Application app = new Application();
+        app.run();
+    }
+
+    /**
+     * While-Schleife, die das ganze Programm über läuft. Ähnlich der main.Methode.
+     */
+    public void run()
+    {
+        while(running)
+        {
+            runOneElementOfQueue();
+
+            try
+            {
+                Thread.sleep(1000);
+            } catch(InterruptedException ex)
+            {
+                System.out.println("MAIN-SCHLEIFE KONNTE NICHT PAUSIEREN!");
+            }
+        }
+    }
+
+    public static void addToQueue(String methodName, Object... args)
+    {
+        Method[] methods = SettingHandler.class.getMethods();
+        Method theMethod = null;
+
+        for(Method method : methods)
+            if(method.getName().equals(methodName))
+            {
+                theMethod = method;
+                break;
+            }
+
+        queue.add(new QueueElement(theMethod, args));
+    }
+
+    private void runOneElementOfQueue()
+    {
+        if(queue.size() > 0)
+        {
+            queue.get(0).invoke();
+            queue.remove(0);
+        }
+    }
+
+    /**
+     * Generiert einen zufälligen "Satz".
+     * @deprecated
+     * @return "Zufalls-Satz"
+     */
+    private String randomString()
+    {
+        Random rand = new Random();
+        int length = rand.nextInt(60) + 20;
+        String s = "";
+
+        for(int i = 0; i < length; i++)
+        {
+            if(rand.nextInt(5) == 0)
+                s += " ";
+
+            s += Character.toLowerCase((char) (rand.nextInt(26) + 65));
+        }
+
+        return s;
+    }
+}
diff --git a/src/com/facharbeit/main/Entry.java b/src/com/facharbeit/main/Entry.java
new file mode 100644
index 0000000..cb7eb84
--- /dev/null
+++ b/src/com/facharbeit/main/Entry.java
@@ -0,0 +1,79 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+package com.facharbeit.main;
+
+/**
+ *
+ * @author Mirko
+ */
+public class Entry
+{
+
+    private int hour;
+    private boolean nextIsEqual;
+    private String[] content;
+
+    public int getHour()
+    {
+        return hour;
+    }
+
+    public void setHour(int hour)
+    {
+        this.hour = hour;
+    }
+
+    public boolean isNextEqual()
+    {
+        return nextIsEqual;
+    }
+
+    public void setNextIsEqual(boolean nextIsEqual)
+    {
+        this.nextIsEqual = nextIsEqual;
+    }
+
+    public String[] getContent()
+    {
+        return content;
+    }
+
+    public void setContent(String[] content)
+    {
+        this.content = content;
+    }
+
+    public Entry(int hour, boolean nextIsEqual, String... content)
+    {
+        this.hour = hour;
+        this.nextIsEqual = nextIsEqual;
+        this.content = content;
+    }
+
+    public Entry(int hour, String... content)
+    {
+        this.hour = hour;
+        this.nextIsEqual = false;
+        this.content = content;
+    }
+
+    public Entry(String... content)
+    {
+        try
+        {
+            this.hour = Integer.parseInt(content[0]);
+        } catch(NumberFormatException n)
+        {
+            this.hour = -1;
+        }
+
+        this.nextIsEqual = false;
+
+        for(int i = 1; i < content.length; i++)
+            this.content[i - 1] = content[i];
+    }
+
+}
diff --git a/src/com/facharbeit/main/Frame.form b/src/com/facharbeit/main/Frame.form
new file mode 100644
index 0000000..520e60b
--- /dev/null
+++ b/src/com/facharbeit/main/Frame.form
@@ -0,0 +1,749 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<Form version="1.3" maxVersion="1.9" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
+  <NonVisualComponents>
+    <Component class="javax.swing.JColorChooser" name="jColorChooser1">
+    </Component>
+    <Component class="javax.swing.JFileChooser" name="jFileChooser1">
+      <Properties>
+        <Property name="fileHidingEnabled" type="boolean" value="true"/>
+        <Property name="fileSelectionMode" type="int" value="1"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JCheckBox" name="jCheckBox2">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="jCheckBox2"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JTextField" name="jTextField1">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="jTextField1"/>
+      </Properties>
+    </Component>
+  </NonVisualComponents>
+  <Properties>
+    <Property name="defaultCloseOperation" type="int" value="3"/>
+    <Property name="title" type="java.lang.String" value="Vertretungsplan Vfinalepicness"/>
+    <Property name="cursor" type="java.awt.Cursor" editor="org.netbeans.modules.form.editors2.CursorEditor">
+      <Color id="Standardcursor"/>
+    </Property>
+    <Property name="resizable" type="boolean" value="false"/>
+  </Properties>
+  <SyntheticProperties>
+    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
+    <SyntheticProperty name="generateCenter" type="boolean" value="false"/>
+  </SyntheticProperties>
+  <AuxValues>
+    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
+    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
+    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
+    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
+    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
+    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
+    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
+    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
+    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
+  </AuxValues>
+
+  <Layout>
+    <DimensionLayout dim="0">
+      <Group type="103" groupAlignment="0" attributes="0">
+          <Component id="jTabbedPane1" max="32767" attributes="0"/>
+      </Group>
+    </DimensionLayout>
+    <DimensionLayout dim="1">
+      <Group type="103" groupAlignment="0" attributes="0">
+          <Component id="jTabbedPane1" alignment="0" max="32767" attributes="0"/>
+      </Group>
+    </DimensionLayout>
+  </Layout>
+  <SubComponents>
+    <Container class="javax.swing.JTabbedPane" name="jTabbedPane1">
+
+      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout"/>
+      <SubComponents>
+        <Container class="javax.swing.JPanel" name="jPanel1">
+          <Constraints>
+            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout$JTabbedPaneConstraintsDescription">
+              <JTabbedPaneConstraints tabName="Control">
+                <Property name="tabTitle" type="java.lang.String" value="Control"/>
+              </JTabbedPaneConstraints>
+            </Constraint>
+          </Constraints>
+
+          <Layout>
+            <DimensionLayout dim="0">
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Group type="102" alignment="0" attributes="0">
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Group type="103" groupAlignment="0" attributes="0">
+                          <Component id="jSeparator1" max="32767" attributes="0"/>
+                          <Component id="jSeparator2" max="32767" attributes="0"/>
+                          <Component id="jLabel5" max="32767" attributes="0"/>
+                          <Component id="MOTD" alignment="0" max="32767" attributes="0"/>
+                          <Group type="102" attributes="0">
+                              <Group type="103" groupAlignment="0" attributes="0">
+                                  <Component id="jLabel3" min="-2" max="-2" attributes="0"/>
+                                  <Component id="jLabel2" alignment="0" min="-2" max="-2" attributes="0"/>
+                                  <Group type="102" alignment="0" attributes="0">
+                                      <Component id="createBackup" min="-2" pref="147" max="-2" attributes="0"/>
+                                      <EmptySpace max="-2" attributes="0"/>
+                                      <Component id="deleteSource" min="-2" pref="147" max="-2" attributes="0"/>
+                                  </Group>
+                                  <Group type="102" attributes="0">
+                                      <Component id="genAll" min="-2" pref="120" max="-2" attributes="0"/>
+                                      <EmptySpace max="-2" attributes="0"/>
+                                      <Group type="103" groupAlignment="0" max="-2" attributes="0">
+                                          <Component id="genToday" max="32767" attributes="0"/>
+                                          <Component id="genTomorrow" pref="174" max="32767" attributes="0"/>
+                                      </Group>
+                                  </Group>
+                                  <Group type="102" alignment="0" attributes="0">
+                                      <Component id="genMOTD" min="-2" pref="147" max="-2" attributes="0"/>
+                                      <EmptySpace max="-2" attributes="0"/>
+                                      <Component id="deleteMOTD" min="-2" pref="147" max="-2" attributes="0"/>
+                                  </Group>
+                              </Group>
+                              <EmptySpace min="0" pref="0" max="32767" attributes="0"/>
+                          </Group>
+                      </Group>
+                      <EmptySpace type="unrelated" max="-2" attributes="0"/>
+                      <Component id="jSeparator6" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace type="unrelated" max="-2" attributes="0"/>
+                      <Group type="103" groupAlignment="0" attributes="0">
+                          <Component id="jProgressBar1" pref="287" max="32767" attributes="0"/>
+                          <Component id="jScrollPane1" alignment="0" max="32767" attributes="0"/>
+                          <Group type="102" attributes="0">
+                              <Component id="jLabel1" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace min="0" pref="0" max="32767" attributes="0"/>
+                          </Group>
+                          <Component id="jLabel4" alignment="1" max="32767" attributes="0"/>
+                      </Group>
+                      <EmptySpace max="-2" attributes="0"/>
+                  </Group>
+              </Group>
+            </DimensionLayout>
+            <DimensionLayout dim="1">
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Group type="102" alignment="1" attributes="0">
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Group type="103" groupAlignment="1" attributes="0">
+                          <Component id="jSeparator6" max="32767" attributes="0"/>
+                          <Group type="102" alignment="0" attributes="0">
+                              <Component id="jLabel5" max="32767" attributes="0"/>
+                              <EmptySpace max="-2" attributes="0"/>
+                              <Component id="jLabel2" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace min="-2" max="-2" attributes="0"/>
+                              <Group type="103" groupAlignment="0" max="-2" attributes="0">
+                                  <Component id="genAll" alignment="1" min="-2" pref="52" max="-2" attributes="0"/>
+                                  <Group type="102" alignment="1" attributes="0">
+                                      <Component id="genToday" min="-2" max="-2" attributes="0"/>
+                                      <EmptySpace max="32767" attributes="0"/>
+                                      <Component id="genTomorrow" min="-2" max="-2" attributes="0"/>
+                                  </Group>
+                              </Group>
+                              <EmptySpace type="unrelated" min="-2" max="-2" attributes="0"/>
+                              <Component id="jSeparator2" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace type="unrelated" min="-2" max="-2" attributes="0"/>
+                              <Group type="103" groupAlignment="3" attributes="0">
+                                  <Component id="createBackup" alignment="3" min="-2" max="-2" attributes="0"/>
+                                  <Component id="deleteSource" alignment="3" min="-2" max="-2" attributes="0"/>
+                              </Group>
+                              <EmptySpace type="unrelated" min="-2" max="-2" attributes="0"/>
+                              <Component id="jSeparator1" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace type="unrelated" min="-2" max="-2" attributes="0"/>
+                              <Component id="jLabel3" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace min="-2" max="-2" attributes="0"/>
+                              <Component id="MOTD" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace max="-2" attributes="0"/>
+                              <Group type="103" groupAlignment="3" attributes="0">
+                                  <Component id="genMOTD" alignment="3" min="-2" max="-2" attributes="0"/>
+                                  <Component id="deleteMOTD" alignment="3" min="-2" max="-2" attributes="0"/>
+                              </Group>
+                          </Group>
+                          <Group type="102" alignment="1" attributes="0">
+                              <Component id="jLabel1" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace min="-2" max="-2" attributes="0"/>
+                              <Component id="jScrollPane1" max="32767" attributes="0"/>
+                              <EmptySpace max="-2" attributes="0"/>
+                              <Component id="jLabel4" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace min="-2" max="-2" attributes="0"/>
+                              <Component id="jProgressBar1" min="-2" max="-2" attributes="0"/>
+                          </Group>
+                      </Group>
+                      <EmptySpace max="-2" attributes="0"/>
+                  </Group>
+              </Group>
+            </DimensionLayout>
+          </Layout>
+          <SubComponents>
+            <Container class="javax.swing.JScrollPane" name="jScrollPane1">
+              <AuxValues>
+                <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
+              </AuxValues>
+
+              <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
+              <SubComponents>
+                <Component class="javax.swing.JTextPane" name="log">
+                  <Properties>
+                    <Property name="focusable" type="boolean" value="false"/>
+                  </Properties>
+                </Component>
+              </SubComponents>
+            </Container>
+            <Component class="javax.swing.JLabel" name="jLabel1">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Status:"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JButton" name="genToday">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="heutigen Plan generieren"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JButton" name="genTomorrow">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="morgigen Plan generieren"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JButton" name="genAll">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Pl&#xe4;ne generieren"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JSeparator" name="jSeparator1">
+            </Component>
+            <Component class="javax.swing.JLabel" name="jLabel2">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Vertretungplan:"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JLabel" name="jLabel3">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Laufschrift:"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JTextField" name="MOTD">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Laufschrift"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JButton" name="genMOTD">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Laufschrift generieren"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JProgressBar" name="jProgressBar1">
+            </Component>
+            <Component class="javax.swing.JLabel" name="jLabel4">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Fortschritt:"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JButton" name="createBackup">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Backup erstellen"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JButton" name="deleteSource">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Quellpl&#xe4;ne l&#xf6;schen"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JSeparator" name="jSeparator2">
+            </Component>
+            <Component class="javax.swing.JLabel" name="jLabel5">
+              <Properties>
+                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
+                  <Image iconType="3" name="/com/facharbeit/ressources/antonianumLogo.jpg"/>
+                </Property>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JButton" name="deleteMOTD">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Laufschrift l&#xf6;schen"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JSeparator" name="jSeparator6">
+              <Properties>
+                <Property name="orientation" type="int" value="1"/>
+              </Properties>
+            </Component>
+          </SubComponents>
+        </Container>
+        <Container class="javax.swing.JPanel" name="jPanel2">
+          <Constraints>
+            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout$JTabbedPaneConstraintsDescription">
+              <JTabbedPaneConstraints tabName="Settings">
+                <Property name="tabTitle" type="java.lang.String" value="Settings"/>
+              </JTabbedPaneConstraints>
+            </Constraint>
+          </Constraints>
+
+          <Layout>
+            <DimensionLayout dim="0">
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Group type="102" alignment="0" attributes="0">
+                      <EmptySpace min="-2" max="-2" attributes="0"/>
+                      <Group type="103" groupAlignment="0" attributes="0">
+                          <Component id="jSeparator3" max="32767" attributes="0"/>
+                          <Group type="102" attributes="0">
+                              <Group type="103" groupAlignment="0" attributes="0">
+                                  <Component id="jLabel8" alignment="0" min="-2" max="-2" attributes="0"/>
+                                  <Component id="jLabel9" alignment="0" min="-2" max="-2" attributes="0"/>
+                                  <Component id="jLabel6" alignment="0" min="-2" max="-2" attributes="0"/>
+                              </Group>
+                              <EmptySpace max="-2" attributes="0"/>
+                              <Group type="103" groupAlignment="0" attributes="0">
+                                  <Group type="102" attributes="0">
+                                      <Component id="sourceTxt" max="32767" attributes="0"/>
+                                      <EmptySpace max="-2" attributes="0"/>
+                                      <Component id="selectSourceBtn" min="-2" pref="30" max="-2" attributes="0"/>
+                                  </Group>
+                                  <Group type="102" alignment="1" attributes="0">
+                                      <Group type="103" groupAlignment="1" attributes="0">
+                                          <Component id="savePathBtn" alignment="0" max="32767" attributes="0"/>
+                                          <Component id="backupTxt" max="32767" attributes="0"/>
+                                          <Component id="jScrollPane2" alignment="0" max="32767" attributes="0"/>
+                                      </Group>
+                                      <EmptySpace max="-2" attributes="0"/>
+                                      <Component id="selectBackupBtn" min="-2" pref="30" max="-2" attributes="0"/>
+                                  </Group>
+                              </Group>
+                          </Group>
+                          <Component id="selectDestBtn" alignment="1" min="-2" pref="30" max="-2" attributes="0"/>
+                          <Group type="102" alignment="1" attributes="0">
+                              <Group type="103" groupAlignment="0" attributes="0">
+                                  <Group type="102" alignment="0" attributes="0">
+                                      <Group type="103" groupAlignment="0" max="-2" attributes="0">
+                                          <Component id="jLabel14" max="32767" attributes="0"/>
+                                          <Component id="jLabel7" max="32767" attributes="0"/>
+                                      </Group>
+                                      <EmptySpace min="-2" max="-2" attributes="0"/>
+                                      <Group type="103" groupAlignment="0" max="-2" attributes="0">
+                                          <Component id="speedPlanTxt" max="32767" attributes="0"/>
+                                          <Component id="speedMotdTxt" pref="63" max="32767" attributes="0"/>
+                                      </Group>
+                                      <EmptySpace max="-2" attributes="0"/>
+                                      <Group type="103" groupAlignment="0" attributes="0">
+                                          <Component id="setSpeedPlanBtn" max="32767" attributes="0"/>
+                                          <Component id="setSpeedMotdBtn" max="32767" attributes="0"/>
+                                      </Group>
+                                  </Group>
+                                  <Component id="jSeparator4" max="32767" attributes="0"/>
+                                  <Group type="102" alignment="1" attributes="0">
+                                      <Group type="103" groupAlignment="0" attributes="0">
+                                          <Group type="102" attributes="0">
+                                              <Group type="103" groupAlignment="0" attributes="0">
+                                                  <Group type="102" alignment="0" attributes="0">
+                                                      <Component id="jLabel13" min="-2" pref="72" max="-2" attributes="0"/>
+                                                      <EmptySpace min="-2" max="-2" attributes="0"/>
+                                                      <Component id="colorMotdCombo" max="32767" attributes="0"/>
+                                                  </Group>
+                                                  <Group type="102" alignment="0" attributes="0">
+                                                      <Component id="jLabel11" min="-2" max="-2" attributes="0"/>
+                                                      <EmptySpace min="-2" max="-2" attributes="0"/>
+                                                      <Component id="colorPlanCombo" max="32767" attributes="0"/>
+                                                  </Group>
+                                              </Group>
+                                              <EmptySpace min="-2" max="-2" attributes="0"/>
+                                              <Group type="103" groupAlignment="1" attributes="0">
+                                                  <Component id="colorPlanPanel" min="-2" max="-2" attributes="0"/>
+                                                  <Component id="colorMotdPanel" min="-2" max="-2" attributes="0"/>
+                                              </Group>
+                                          </Group>
+                                          <Group type="102" alignment="1" attributes="0">
+                                              <Component id="colorNameTxt" pref="70" max="32767" attributes="0"/>
+                                              <EmptySpace max="-2" attributes="0"/>
+                                              <Component id="addColorBtn" min="-2" pref="119" max="-2" attributes="0"/>
+                                          </Group>
+                                      </Group>
+                                      <EmptySpace max="-2" attributes="0"/>
+                                      <Group type="103" groupAlignment="0" max="-2" attributes="0">
+                                          <Component id="deleteColor" max="32767" attributes="0"/>
+                                          <Component id="setColorPlanBtn" max="32767" attributes="0"/>
+                                          <Component id="setColorMotdBtn" max="32767" attributes="0"/>
+                                      </Group>
+                                  </Group>
+                              </Group>
+                              <EmptySpace type="unrelated" min="-2" max="-2" attributes="0"/>
+                              <Component id="jSeparator7" min="-2" pref="2" max="-2" attributes="0"/>
+                              <EmptySpace type="unrelated" min="-2" max="-2" attributes="0"/>
+                              <Group type="103" groupAlignment="0" attributes="0">
+                                  <Group type="102" alignment="0" attributes="0">
+                                      <Group type="103" groupAlignment="1" attributes="0">
+                                          <Component id="configureSQLBtn" min="-2" pref="30" max="-2" attributes="0"/>
+                                          <Component id="autoBackupCheck" min="-2" pref="135" max="-2" attributes="0"/>
+                                      </Group>
+                                      <EmptySpace max="32767" attributes="0"/>
+                                      <Component id="autoDeleteSourceCheck" min="-2" pref="135" max="-2" attributes="0"/>
+                                  </Group>
+                                  <Group type="102" attributes="0">
+                                      <Group type="103" groupAlignment="0" attributes="0">
+                                          <Component id="jLabel10" min="-2" pref="287" max="-2" attributes="0"/>
+                                          <Component id="useSQLCheck" min="-2" pref="100" max="-2" attributes="0"/>
+                                      </Group>
+                                      <EmptySpace min="0" pref="0" max="32767" attributes="0"/>
+                                  </Group>
+                              </Group>
+                          </Group>
+                      </Group>
+                      <EmptySpace max="-2" attributes="0"/>
+                  </Group>
+              </Group>
+            </DimensionLayout>
+            <DimensionLayout dim="1">
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Group type="102" attributes="0">
+                      <EmptySpace min="-2" max="-2" attributes="0"/>
+                      <Group type="103" groupAlignment="0" attributes="0">
+                          <Group type="103" alignment="0" groupAlignment="3" attributes="0">
+                              <Component id="jLabel6" alignment="3" min="-2" pref="20" max="-2" attributes="0"/>
+                              <Component id="sourceTxt" alignment="3" min="-2" max="-2" attributes="0"/>
+                          </Group>
+                          <Component id="selectSourceBtn" alignment="1" min="-2" pref="20" max="-2" attributes="0"/>
+                      </Group>
+                      <EmptySpace min="-2" max="-2" attributes="0"/>
+                      <Group type="103" groupAlignment="0" attributes="0">
+                          <Group type="103" alignment="0" groupAlignment="3" attributes="0">
+                              <Component id="backupTxt" alignment="3" min="-2" max="-2" attributes="0"/>
+                              <Component id="jLabel8" alignment="3" min="-2" max="-2" attributes="0"/>
+                          </Group>
+                          <Component id="selectBackupBtn" min="-2" pref="20" max="-2" attributes="0"/>
+                      </Group>
+                      <EmptySpace min="-2" max="-2" attributes="0"/>
+                      <Group type="103" groupAlignment="0" attributes="0">
+                          <Component id="jLabel9" min="-2" max="-2" attributes="0"/>
+                          <Component id="selectDestBtn" alignment="0" min="-2" pref="20" max="-2" attributes="0"/>
+                          <Component id="jScrollPane2" pref="98" max="32767" attributes="0"/>
+                      </Group>
+                      <EmptySpace min="-2" max="-2" attributes="0"/>
+                      <Component id="savePathBtn" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace type="unrelated" max="-2" attributes="0"/>
+                      <Component id="jSeparator3" min="-2" pref="2" max="-2" attributes="0"/>
+                      <EmptySpace type="unrelated" max="-2" attributes="0"/>
+                      <Group type="103" groupAlignment="0" max="-2" attributes="0">
+                          <Component id="jSeparator7" alignment="1" max="32767" attributes="0"/>
+                          <Group type="102" alignment="1" attributes="0">
+                              <Group type="103" groupAlignment="0" attributes="0">
+                                  <Group type="103" groupAlignment="3" attributes="0">
+                                      <Component id="jLabel11" alignment="3" min="-2" max="-2" attributes="0"/>
+                                      <Component id="colorPlanCombo" alignment="3" min="-2" max="-2" attributes="0"/>
+                                      <Component id="setColorPlanBtn" alignment="3" min="-2" max="-2" attributes="0"/>
+                                  </Group>
+                                  <Component id="colorPlanPanel" min="-2" max="-2" attributes="0"/>
+                              </Group>
+                              <EmptySpace max="-2" attributes="0"/>
+                              <Group type="103" groupAlignment="0" attributes="0">
+                                  <Group type="103" groupAlignment="3" attributes="0">
+                                      <Component id="jLabel13" alignment="3" min="-2" max="-2" attributes="0"/>
+                                      <Component id="colorMotdCombo" alignment="3" min="-2" max="-2" attributes="0"/>
+                                      <Component id="setColorMotdBtn" alignment="3" min="-2" max="-2" attributes="0"/>
+                                  </Group>
+                                  <Component id="colorMotdPanel" min="-2" max="-2" attributes="0"/>
+                              </Group>
+                              <EmptySpace max="-2" attributes="0"/>
+                              <Group type="103" groupAlignment="3" attributes="0">
+                                  <Component id="addColorBtn" alignment="3" min="-2" max="-2" attributes="0"/>
+                                  <Component id="deleteColor" alignment="3" min="-2" max="-2" attributes="0"/>
+                                  <Component id="colorNameTxt" alignment="3" min="-2" max="-2" attributes="0"/>
+                              </Group>
+                              <EmptySpace type="unrelated" max="-2" attributes="0"/>
+                              <Component id="jSeparator4" min="-2" pref="2" max="-2" attributes="0"/>
+                              <EmptySpace type="unrelated" max="-2" attributes="0"/>
+                              <Group type="103" groupAlignment="3" attributes="0">
+                                  <Component id="jLabel14" alignment="3" min="-2" max="-2" attributes="0"/>
+                                  <Component id="speedPlanTxt" alignment="3" min="-2" max="-2" attributes="0"/>
+                                  <Component id="setSpeedPlanBtn" alignment="3" min="-2" max="-2" attributes="0"/>
+                              </Group>
+                              <EmptySpace min="-2" max="-2" attributes="0"/>
+                              <Group type="103" groupAlignment="3" attributes="0">
+                                  <Component id="speedMotdTxt" alignment="3" min="-2" max="-2" attributes="0"/>
+                                  <Component id="jLabel7" alignment="3" min="-2" max="-2" attributes="0"/>
+                                  <Component id="setSpeedMotdBtn" alignment="3" min="-2" max="-2" attributes="0"/>
+                              </Group>
+                          </Group>
+                          <Group type="102" alignment="1" attributes="0">
+                              <Group type="103" groupAlignment="3" attributes="0">
+                                  <Component id="autoBackupCheck" alignment="3" min="-2" max="-2" attributes="0"/>
+                                  <Component id="autoDeleteSourceCheck" alignment="3" min="-2" max="-2" attributes="0"/>
+                              </Group>
+                              <EmptySpace max="-2" attributes="0"/>
+                              <Group type="103" groupAlignment="1" attributes="0">
+                                  <Component id="useSQLCheck" min="-2" max="-2" attributes="0"/>
+                                  <Component id="configureSQLBtn" min="-2" pref="20" max="-2" attributes="0"/>
+                              </Group>
+                              <EmptySpace max="32767" attributes="0"/>
+                              <Component id="jLabel10" min="-2" max="-2" attributes="0"/>
+                          </Group>
+                      </Group>
+                      <EmptySpace max="-2" attributes="0"/>
+                  </Group>
+              </Group>
+            </DimensionLayout>
+          </Layout>
+          <SubComponents>
+            <Component class="javax.swing.JTextField" name="sourceTxt">
+            </Component>
+            <Component class="javax.swing.JLabel" name="jLabel6">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Quellpfad"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JTextField" name="backupTxt">
+            </Component>
+            <Container class="javax.swing.JScrollPane" name="jScrollPane2">
+              <AuxValues>
+                <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
+              </AuxValues>
+
+              <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
+              <SubComponents>
+                <Component class="javax.swing.JTextArea" name="destArea">
+                  <Properties>
+                    <Property name="columns" type="int" value="20"/>
+                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
+                      <Font name="Tahoma" size="11" style="0"/>
+                    </Property>
+                    <Property name="rows" type="int" value="5"/>
+                  </Properties>
+                  <AuxValues>
+                    <AuxValue name="JavaCodeGenerator_CreateCodeCustom" type="java.lang.String" value="new javax.swing.JTextArea(&quot;&quot;)"/>
+                  </AuxValues>
+                </Component>
+              </SubComponents>
+            </Container>
+            <Component class="javax.swing.JLabel" name="jLabel8">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Backuppfad"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JLabel" name="jLabel9">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Zielpfade"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JButton" name="savePathBtn">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Pfade speichern"/>
+              </Properties>
+              <Events>
+                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="savePathBtnActionPerformed"/>
+              </Events>
+            </Component>
+            <Component class="javax.swing.JSeparator" name="jSeparator3">
+            </Component>
+            <Component class="javax.swing.JLabel" name="jLabel11">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Vertretungplan"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JComboBox" name="colorPlanCombo">
+              <Properties>
+                <Property name="model" type="javax.swing.ComboBoxModel" editor="org.netbeans.modules.form.editors2.ComboBoxModelEditor">
+                  <StringArray count="0"/>
+                </Property>
+              </Properties>
+              <Events>
+                <EventHandler event="itemStateChanged" listener="java.awt.event.ItemListener" parameters="java.awt.event.ItemEvent" handler="colorPlanComboItemStateChanged"/>
+              </Events>
+            </Component>
+            <Component class="javax.swing.JButton" name="setColorPlanBtn">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="setze Farbe"/>
+              </Properties>
+              <Events>
+                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="setColorPlanBtnActionPerformed"/>
+              </Events>
+            </Component>
+            <Component class="javax.swing.JButton" name="selectBackupBtn">
+              <Properties>
+                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
+                  <Image iconType="3" name="/com/facharbeit/ressources/ordner.png"/>
+                </Property>
+              </Properties>
+              <Events>
+                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="selectBackupBtnActionPerformed"/>
+              </Events>
+            </Component>
+            <Component class="javax.swing.JButton" name="selectSourceBtn">
+              <Properties>
+                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
+                  <Image iconType="3" name="/com/facharbeit/ressources/ordner.png"/>
+                </Property>
+              </Properties>
+              <Events>
+                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="selectSourceBtnActionPerformed"/>
+              </Events>
+            </Component>
+            <Component class="javax.swing.JButton" name="selectDestBtn">
+              <Properties>
+                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
+                  <Image iconType="3" name="/com/facharbeit/ressources/ordner.png"/>
+                </Property>
+              </Properties>
+              <Events>
+                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="selectDestBtnActionPerformed"/>
+              </Events>
+            </Component>
+            <Component class="javax.swing.JLabel" name="jLabel13">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Laufschrift"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JComboBox" name="colorMotdCombo">
+              <Properties>
+                <Property name="model" type="javax.swing.ComboBoxModel" editor="org.netbeans.modules.form.editors2.ComboBoxModelEditor">
+                  <StringArray count="0"/>
+                </Property>
+              </Properties>
+              <Events>
+                <EventHandler event="itemStateChanged" listener="java.awt.event.ItemListener" parameters="java.awt.event.ItemEvent" handler="colorMotdComboItemStateChanged"/>
+              </Events>
+            </Component>
+            <Component class="javax.swing.JButton" name="setColorMotdBtn">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="setze Farbe"/>
+              </Properties>
+              <Events>
+                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="setColorMotdBtnActionPerformed"/>
+              </Events>
+            </Component>
+            <Component class="javax.swing.JButton" name="addColorBtn">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Farbe w&#xe4;hlen"/>
+              </Properties>
+              <Events>
+                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="addColorBtnActionPerformed"/>
+              </Events>
+            </Component>
+            <Component class="javax.swing.JButton" name="deleteColor">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Farbe l&#xf6;schen"/>
+              </Properties>
+              <Events>
+                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="deleteColorActionPerformed"/>
+              </Events>
+            </Component>
+            <Component class="javax.swing.JSeparator" name="jSeparator4">
+            </Component>
+            <Component class="javax.swing.JLabel" name="jLabel14">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Scrollgeschwindigkeit"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JTextField" name="speedPlanTxt">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="10"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JButton" name="setSpeedPlanBtn">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="setze Geschw."/>
+              </Properties>
+              <Events>
+                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="setSpeedPlanBtnActionPerformed"/>
+              </Events>
+            </Component>
+            <Component class="javax.swing.JLabel" name="jLabel7">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Laufschriftgeschw."/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JTextField" name="speedMotdTxt">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="10"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JButton" name="setSpeedMotdBtn">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="setze Geschw."/>
+              </Properties>
+              <Events>
+                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="setSpeedMotdBtnActionPerformed"/>
+              </Events>
+            </Component>
+            <Component class="javax.swing.JLabel" name="jLabel10">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="GAAAAAANZ VIIIEEEL PLAATZ"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JSeparator" name="jSeparator7">
+              <Properties>
+                <Property name="orientation" type="int" value="1"/>
+              </Properties>
+            </Component>
+            <Container class="javax.swing.JPanel" name="colorMotdPanel">
+
+              <Layout>
+                <DimensionLayout dim="0">
+                  <Group type="103" groupAlignment="0" attributes="0">
+                      <EmptySpace min="0" pref="24" max="32767" attributes="0"/>
+                  </Group>
+                </DimensionLayout>
+                <DimensionLayout dim="1">
+                  <Group type="103" groupAlignment="0" attributes="0">
+                      <EmptySpace min="0" pref="23" max="32767" attributes="0"/>
+                  </Group>
+                </DimensionLayout>
+              </Layout>
+            </Container>
+            <Container class="javax.swing.JPanel" name="colorPlanPanel">
+
+              <Layout>
+                <DimensionLayout dim="0">
+                  <Group type="103" groupAlignment="0" attributes="0">
+                      <EmptySpace min="0" pref="24" max="32767" attributes="0"/>
+                  </Group>
+                </DimensionLayout>
+                <DimensionLayout dim="1">
+                  <Group type="103" groupAlignment="0" attributes="0">
+                      <EmptySpace min="0" pref="23" max="32767" attributes="0"/>
+                  </Group>
+                </DimensionLayout>
+              </Layout>
+            </Container>
+            <Component class="javax.swing.JTextField" name="colorNameTxt">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Farbenname"/>
+              </Properties>
+              <Events>
+                <EventHandler event="focusGained" listener="java.awt.event.FocusListener" parameters="java.awt.event.FocusEvent" handler="colorNameTxtFocusGained"/>
+                <EventHandler event="focusLost" listener="java.awt.event.FocusListener" parameters="java.awt.event.FocusEvent" handler="colorNameTxtFocusLost"/>
+              </Events>
+            </Component>
+            <Component class="javax.swing.JCheckBox" name="autoBackupCheck">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Automatisches Backup"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JCheckBox" name="autoDeleteSourceCheck">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Auto Quellen l&#xf6;schen"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JCheckBox" name="useSQLCheck">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="SQL benutzen"/>
+              </Properties>
+              <Events>
+                <EventHandler event="stateChanged" listener="javax.swing.event.ChangeListener" parameters="javax.swing.event.ChangeEvent" handler="useSQLCheckStateChanged"/>
+              </Events>
+            </Component>
+            <Component class="javax.swing.JButton" name="configureSQLBtn">
+              <Properties>
+                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
+                  <Image iconType="3" name="/com/facharbeit/ressources/Settings16.png"/>
+                </Property>
+                <Property name="enabled" type="boolean" value="false"/>
+              </Properties>
+              <AuxValues>
+                <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="configureSQLBtn.setEnabled(useSQLCheck.isSelected());&#xd;&#xa;"/>
+              </AuxValues>
+            </Component>
+          </SubComponents>
+        </Container>
+      </SubComponents>
+    </Container>
+  </SubComponents>
+</Form>
diff --git a/src/com/facharbeit/main/Frame.java b/src/com/facharbeit/main/Frame.java
new file mode 100644
index 0000000..1394de2
--- /dev/null
+++ b/src/com/facharbeit/main/Frame.java
@@ -0,0 +1,773 @@
+package com.facharbeit.main;
+
+import com.facharbeit.io.SettingHandler;
+import com.facharbeit.io.Settings;
+import javax.swing.JTextField;
+import javax.swing.JTextPane;
+
+public class Frame extends javax.swing.JFrame
+{
+
+    private static final long serialVersionUID = 1L;
+
+    public Frame()
+    {
+        initComponents();
+    }
+
+    @SuppressWarnings("unchecked")
+    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
+    private void initComponents()
+    {
+
+        jColorChooser1 = new javax.swing.JColorChooser();
+        jFileChooser1 = new javax.swing.JFileChooser();
+        jCheckBox2 = new javax.swing.JCheckBox();
+        jTextField1 = new javax.swing.JTextField();
+        jTabbedPane1 = new javax.swing.JTabbedPane();
+        jPanel1 = new javax.swing.JPanel();
+        jScrollPane1 = new javax.swing.JScrollPane();
+        log = new javax.swing.JTextPane();
+        jLabel1 = new javax.swing.JLabel();
+        genToday = new javax.swing.JButton();
+        genTomorrow = new javax.swing.JButton();
+        genAll = new javax.swing.JButton();
+        jSeparator1 = new javax.swing.JSeparator();
+        jLabel2 = new javax.swing.JLabel();
+        jLabel3 = new javax.swing.JLabel();
+        MOTD = new javax.swing.JTextField();
+        genMOTD = new javax.swing.JButton();
+        jProgressBar1 = new javax.swing.JProgressBar();
+        jLabel4 = new javax.swing.JLabel();
+        createBackup = new javax.swing.JButton();
+        deleteSource = new javax.swing.JButton();
+        jSeparator2 = new javax.swing.JSeparator();
+        jLabel5 = new javax.swing.JLabel();
+        deleteMOTD = new javax.swing.JButton();
+        jSeparator6 = new javax.swing.JSeparator();
+        jPanel2 = new javax.swing.JPanel();
+        sourceTxt = new javax.swing.JTextField();
+        jLabel6 = new javax.swing.JLabel();
+        backupTxt = new javax.swing.JTextField();
+        jScrollPane2 = new javax.swing.JScrollPane();
+        destArea = new javax.swing.JTextArea("");
+        jLabel8 = new javax.swing.JLabel();
+        jLabel9 = new javax.swing.JLabel();
+        savePathBtn = new javax.swing.JButton();
+        jSeparator3 = new javax.swing.JSeparator();
+        jLabel11 = new javax.swing.JLabel();
+        colorPlanCombo = new javax.swing.JComboBox();
+        setColorPlanBtn = new javax.swing.JButton();
+        selectBackupBtn = new javax.swing.JButton();
+        selectSourceBtn = new javax.swing.JButton();
+        selectDestBtn = new javax.swing.JButton();
+        jLabel13 = new javax.swing.JLabel();
+        colorMotdCombo = new javax.swing.JComboBox();
+        setColorMotdBtn = new javax.swing.JButton();
+        addColorBtn = new javax.swing.JButton();
+        deleteColor = new javax.swing.JButton();
+        jSeparator4 = new javax.swing.JSeparator();
+        jLabel14 = new javax.swing.JLabel();
+        speedPlanTxt = new javax.swing.JTextField();
+        setSpeedPlanBtn = new javax.swing.JButton();
+        jLabel7 = new javax.swing.JLabel();
+        speedMotdTxt = new javax.swing.JTextField();
+        setSpeedMotdBtn = new javax.swing.JButton();
+        jLabel10 = new javax.swing.JLabel();
+        jSeparator7 = new javax.swing.JSeparator();
+        colorMotdPanel = new javax.swing.JPanel();
+        colorPlanPanel = new javax.swing.JPanel();
+        colorNameTxt = new javax.swing.JTextField();
+        autoBackupCheck = new javax.swing.JCheckBox();
+        autoDeleteSourceCheck = new javax.swing.JCheckBox();
+        useSQLCheck = new javax.swing.JCheckBox();
+        configureSQLBtn = new javax.swing.JButton();
+
+        jFileChooser1.setFileHidingEnabled(true);
+        jFileChooser1.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
+
+        jCheckBox2.setText("jCheckBox2");
+
+        jTextField1.setText("jTextField1");
+
+        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
+        setTitle("Vertretungsplan Vfinalepicness");
+        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
+        setResizable(false);
+
+        log.setFocusable(false);
+        jScrollPane1.setViewportView(log);
+
+        jLabel1.setText("Status:");
+
+        genToday.setText("heutigen Plan generieren");
+
+        genTomorrow.setText("morgigen Plan generieren");
+
+        genAll.setText("Pläne generieren");
+
+        jLabel2.setText("Vertretungplan:");
+
+        jLabel3.setText("Laufschrift:");
+
+        MOTD.setText("Laufschrift");
+
+        genMOTD.setText("Laufschrift generieren");
+
+        jLabel4.setText("Fortschritt:");
+
+        createBackup.setText("Backup erstellen");
+
+        deleteSource.setText("Quellpläne löschen");
+
+        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/facharbeit/ressources/antonianumLogo.jpg"))); // NOI18N
+
+        deleteMOTD.setText("Laufschrift löschen");
+
+        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);
+
+        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
+        jPanel1.setLayout(jPanel1Layout);
+        jPanel1Layout.setHorizontalGroup(
+            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+            .addGroup(jPanel1Layout.createSequentialGroup()
+                .addContainerGap()
+                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                    .addComponent(jSeparator1)
+                    .addComponent(jSeparator2)
+                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                    .addComponent(MOTD)
+                    .addGroup(jPanel1Layout.createSequentialGroup()
+                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                            .addComponent(jLabel3)
+                            .addComponent(jLabel2)
+                            .addGroup(jPanel1Layout.createSequentialGroup()
+                                .addComponent(createBackup, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
+                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                                .addComponent(deleteSource, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
+                            .addGroup(jPanel1Layout.createSequentialGroup()
+                                .addComponent(genAll, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
+                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
+                                    .addComponent(genToday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                    .addComponent(genTomorrow, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)))
+                            .addGroup(jPanel1Layout.createSequentialGroup()
+                                .addComponent(genMOTD, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
+                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                                .addComponent(deleteMOTD, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
+                        .addGap(0, 0, Short.MAX_VALUE)))
+                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
+                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
+                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
+                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
+                    .addComponent(jScrollPane1)
+                    .addGroup(jPanel1Layout.createSequentialGroup()
+                        .addComponent(jLabel1)
+                        .addGap(0, 0, Short.MAX_VALUE))
+                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+                .addContainerGap())
+        );
+        jPanel1Layout.setVerticalGroup(
+            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
+                .addContainerGap()
+                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
+                    .addComponent(jSeparator6)
+                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
+                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                        .addComponent(jLabel2)
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
+                            .addComponent(genAll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
+                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
+                                .addComponent(genToday)
+                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                .addComponent(genTomorrow)))
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
+                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
+                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
+                            .addComponent(createBackup)
+                            .addComponent(deleteSource))
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
+                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
+                        .addComponent(jLabel3)
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                        .addComponent(MOTD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
+                            .addComponent(genMOTD)
+                            .addComponent(deleteMOTD)))
+                    .addGroup(jPanel1Layout.createSequentialGroup()
+                        .addComponent(jLabel1)
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                        .addComponent(jScrollPane1)
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                        .addComponent(jLabel4)
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
+                .addContainerGap())
+        );
+
+        jTabbedPane1.addTab("Control", jPanel1);
+
+        jLabel6.setText("Quellpfad");
+
+        destArea.setColumns(20);
+        destArea.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
+        destArea.setRows(5);
+        jScrollPane2.setViewportView(destArea);
+
+        jLabel8.setText("Backuppfad");
+
+        jLabel9.setText("Zielpfade");
+
+        savePathBtn.setText("Pfade speichern");
+        savePathBtn.addActionListener(new java.awt.event.ActionListener()
+        {
+            public void actionPerformed(java.awt.event.ActionEvent evt)
+            {
+                savePathBtnActionPerformed(evt);
+            }
+        });
+
+        jLabel11.setText("Vertretungplan");
+
+        colorPlanCombo.addItemListener(new java.awt.event.ItemListener()
+        {
+            public void itemStateChanged(java.awt.event.ItemEvent evt)
+            {
+                colorPlanComboItemStateChanged(evt);
+            }
+        });
+
+        setColorPlanBtn.setText("setze Farbe");
+        setColorPlanBtn.addActionListener(new java.awt.event.ActionListener()
+        {
+            public void actionPerformed(java.awt.event.ActionEvent evt)
+            {
+                setColorPlanBtnActionPerformed(evt);
+            }
+        });
+
+        selectBackupBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/facharbeit/ressources/ordner.png"))); // NOI18N
+        selectBackupBtn.addActionListener(new java.awt.event.ActionListener()
+        {
+            public void actionPerformed(java.awt.event.ActionEvent evt)
+            {
+                selectBackupBtnActionPerformed(evt);
+            }
+        });
+
+        selectSourceBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/facharbeit/ressources/ordner.png"))); // NOI18N
+        selectSourceBtn.addActionListener(new java.awt.event.ActionListener()
+        {
+            public void actionPerformed(java.awt.event.ActionEvent evt)
+            {
+                selectSourceBtnActionPerformed(evt);
+            }
+        });
+
+        selectDestBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/facharbeit/ressources/ordner.png"))); // NOI18N
+        selectDestBtn.addActionListener(new java.awt.event.ActionListener()
+        {
+            public void actionPerformed(java.awt.event.ActionEvent evt)
+            {
+                selectDestBtnActionPerformed(evt);
+            }
+        });
+
+        jLabel13.setText("Laufschrift");
+
+        colorMotdCombo.addItemListener(new java.awt.event.ItemListener()
+        {
+            public void itemStateChanged(java.awt.event.ItemEvent evt)
+            {
+                colorMotdComboItemStateChanged(evt);
+            }
+        });
+
+        setColorMotdBtn.setText("setze Farbe");
+        setColorMotdBtn.addActionListener(new java.awt.event.ActionListener()
+        {
+            public void actionPerformed(java.awt.event.ActionEvent evt)
+            {
+                setColorMotdBtnActionPerformed(evt);
+            }
+        });
+
+        addColorBtn.setText("Farbe wählen");
+        addColorBtn.addActionListener(new java.awt.event.ActionListener()
+        {
+            public void actionPerformed(java.awt.event.ActionEvent evt)
+            {
+                addColorBtnActionPerformed(evt);
+            }
+        });
+
+        deleteColor.setText("Farbe löschen");
+        deleteColor.addActionListener(new java.awt.event.ActionListener()
+        {
+            public void actionPerformed(java.awt.event.ActionEvent evt)
+            {
+                deleteColorActionPerformed(evt);
+            }
+        });
+
+        jLabel14.setText("Scrollgeschwindigkeit");
+
+        speedPlanTxt.setText("10");
+
+        setSpeedPlanBtn.setText("setze Geschw.");
+        setSpeedPlanBtn.addActionListener(new java.awt.event.ActionListener()
+        {
+            public void actionPerformed(java.awt.event.ActionEvent evt)
+            {
+                setSpeedPlanBtnActionPerformed(evt);
+            }
+        });
+
+        jLabel7.setText("Laufschriftgeschw.");
+
+        speedMotdTxt.setText("10");
+
+        setSpeedMotdBtn.setText("setze Geschw.");
+        setSpeedMotdBtn.addActionListener(new java.awt.event.ActionListener()
+        {
+            public void actionPerformed(java.awt.event.ActionEvent evt)
+            {
+                setSpeedMotdBtnActionPerformed(evt);
+            }
+        });
+
+        jLabel10.setText("GAAAAAANZ VIIIEEEL PLAATZ");
+
+        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);
+
+        javax.swing.GroupLayout colorMotdPanelLayout = new javax.swing.GroupLayout(colorMotdPanel);
+        colorMotdPanel.setLayout(colorMotdPanelLayout);
+        colorMotdPanelLayout.setHorizontalGroup(
+            colorMotdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+            .addGap(0, 24, Short.MAX_VALUE)
+        );
+        colorMotdPanelLayout.setVerticalGroup(
+            colorMotdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+            .addGap(0, 23, Short.MAX_VALUE)
+        );
+
+        javax.swing.GroupLayout colorPlanPanelLayout = new javax.swing.GroupLayout(colorPlanPanel);
+        colorPlanPanel.setLayout(colorPlanPanelLayout);
+        colorPlanPanelLayout.setHorizontalGroup(
+            colorPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+            .addGap(0, 24, Short.MAX_VALUE)
+        );
+        colorPlanPanelLayout.setVerticalGroup(
+            colorPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+            .addGap(0, 23, Short.MAX_VALUE)
+        );
+
+        colorNameTxt.setText("Farbenname");
+        colorNameTxt.addFocusListener(new java.awt.event.FocusAdapter()
+        {
+            public void focusGained(java.awt.event.FocusEvent evt)
+            {
+                colorNameTxtFocusGained(evt);
+            }
+            public void focusLost(java.awt.event.FocusEvent evt)
+            {
+                colorNameTxtFocusLost(evt);
+            }
+        });
+
+        autoBackupCheck.setText("Automatisches Backup");
+
+        autoDeleteSourceCheck.setText("Auto Quellen löschen");
+
+        useSQLCheck.setText("SQL benutzen");
+        useSQLCheck.addChangeListener(new javax.swing.event.ChangeListener()
+        {
+            public void stateChanged(javax.swing.event.ChangeEvent evt)
+            {
+                useSQLCheckStateChanged(evt);
+            }
+        });
+
+        configureSQLBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/facharbeit/ressources/Settings16.png"))); // NOI18N
+        configureSQLBtn.setEnabled(false);
+        configureSQLBtn.setEnabled(useSQLCheck.isSelected());
+
+        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
+        jPanel2.setLayout(jPanel2Layout);
+        jPanel2Layout.setHorizontalGroup(
+            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+            .addGroup(jPanel2Layout.createSequentialGroup()
+                .addContainerGap()
+                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                    .addComponent(jSeparator3)
+                    .addGroup(jPanel2Layout.createSequentialGroup()
+                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                            .addComponent(jLabel8)
+                            .addComponent(jLabel9)
+                            .addComponent(jLabel6))
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                            .addGroup(jPanel2Layout.createSequentialGroup()
+                                .addComponent(sourceTxt)
+                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                                .addComponent(selectSourceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
+                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
+                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
+                                    .addComponent(savePathBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                    .addComponent(backupTxt)
+                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))
+                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                                .addComponent(selectBackupBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
+                    .addComponent(selectDestBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
+                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
+                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                            .addGroup(jPanel2Layout.createSequentialGroup()
+                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
+                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
+                                    .addComponent(speedPlanTxt)
+                                    .addComponent(speedMotdTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE))
+                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                                    .addComponent(setSpeedPlanBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                    .addComponent(setSpeedMotdBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
+                            .addComponent(jSeparator4)
+                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
+                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                                    .addGroup(jPanel2Layout.createSequentialGroup()
+                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                                            .addGroup(jPanel2Layout.createSequentialGroup()
+                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
+                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                                                .addComponent(colorMotdCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+                                            .addGroup(jPanel2Layout.createSequentialGroup()
+                                                .addComponent(jLabel11)
+                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                                                .addComponent(colorPlanCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
+                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
+                                            .addComponent(colorPlanPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
+                                            .addComponent(colorMotdPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
+                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
+                                        .addComponent(colorNameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
+                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                                        .addComponent(addColorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
+                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
+                                    .addComponent(deleteColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                    .addComponent(setColorPlanBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                    .addComponent(setColorMotdBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
+                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
+                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                            .addGroup(jPanel2Layout.createSequentialGroup()
+                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
+                                    .addComponent(configureSQLBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
+                                    .addComponent(autoBackupCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
+                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                .addComponent(autoDeleteSourceCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
+                            .addGroup(jPanel2Layout.createSequentialGroup()
+                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
+                                    .addComponent(useSQLCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
+                                .addGap(0, 0, Short.MAX_VALUE)))))
+                .addContainerGap())
+        );
+        jPanel2Layout.setVerticalGroup(
+            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+            .addGroup(jPanel2Layout.createSequentialGroup()
+                .addContainerGap()
+                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
+                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
+                        .addComponent(sourceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
+                    .addComponent(selectSourceBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
+                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
+                        .addComponent(backupTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
+                        .addComponent(jLabel8))
+                    .addComponent(selectBackupBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
+                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                    .addComponent(jLabel9)
+                    .addComponent(selectDestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
+                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
+                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                .addComponent(savePathBtn)
+                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
+                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
+                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
+                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
+                    .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.TRAILING)
+                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
+                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
+                                .addComponent(jLabel11)
+                                .addComponent(colorPlanCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
+                                .addComponent(setColorPlanBtn))
+                            .addComponent(colorPlanPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
+                                .addComponent(jLabel13)
+                                .addComponent(colorMotdCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
+                                .addComponent(setColorMotdBtn))
+                            .addComponent(colorMotdPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
+                            .addComponent(addColorBtn)
+                            .addComponent(deleteColor)
+                            .addComponent(colorNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
+                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
+                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
+                            .addComponent(jLabel14)
+                            .addComponent(speedPlanTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
+                            .addComponent(setSpeedPlanBtn))
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
+                            .addComponent(speedMotdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
+                            .addComponent(jLabel7)
+                            .addComponent(setSpeedMotdBtn)))
+                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
+                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
+                            .addComponent(autoBackupCheck)
+                            .addComponent(autoDeleteSourceCheck))
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
+                            .addComponent(useSQLCheck)
+                            .addComponent(configureSQLBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                        .addComponent(jLabel10)))
+                .addContainerGap())
+        );
+
+        jTabbedPane1.addTab("Settings", jPanel2);
+
+        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
+        getContentPane().setLayout(layout);
+        layout.setHorizontalGroup(
+            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+            .addComponent(jTabbedPane1)
+        );
+        layout.setVerticalGroup(
+            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
+            .addComponent(jTabbedPane1)
+        );
+
+        pack();
+    }// </editor-fold>//GEN-END:initComponents
+
+    private void selectSourceBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_selectSourceBtnActionPerformed
+    {//GEN-HEADEREND:event_selectSourceBtnActionPerformed
+        jFileChooser1.showOpenDialog(null);
+        sourceTxt.setText(jFileChooser1.getSelectedFile().getPath());
+
+        Application.addToQueue("selectSourceBtnActionPerformed", jFileChooser1, sourceTxt, evt);
+    }//GEN-LAST:event_selectSourceBtnActionPerformed
+
+    private void selectBackupBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_selectBackupBtnActionPerformed
+    {//GEN-HEADEREND:event_selectBackupBtnActionPerformed
+        jFileChooser1.showOpenDialog(null);
+        backupTxt.setText(jFileChooser1.getSelectedFile().getPath());
+    }//GEN-LAST:event_selectBackupBtnActionPerformed
+
+    private void selectDestBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_selectDestBtnActionPerformed
+    {//GEN-HEADEREND:event_selectDestBtnActionPerformed
+        jFileChooser1.showOpenDialog(null);
+
+        if(!destArea.getText().endsWith("\n") && destArea.getText().contains("\n"))
+            destArea.setText(destArea.getText() + "\n");
+
+        destArea.append(jFileChooser1.getSelectedFile().getPath() + "\n");
+    }//GEN-LAST:event_selectDestBtnActionPerformed
+
+    @SuppressWarnings("empty-statement")
+    private void savePathBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_savePathBtnActionPerformed
+    {//GEN-HEADEREND:event_savePathBtnActionPerformed
+        SettingHandler.savePathBtnActionPerformed(sourceTxt, backupTxt, destArea, evt);
+    }//GEN-LAST:event_savePathBtnActionPerformed
+
+    private void setSpeedPlanBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_setSpeedPlanBtnActionPerformed
+    {//GEN-HEADEREND:event_setSpeedPlanBtnActionPerformed
+        SettingHandler.setSpeedPlanBtnActionPerformed(speedPlanTxt, evt);
+    }//GEN-LAST:event_setSpeedPlanBtnActionPerformed
+
+    private void setSpeedMotdBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_setSpeedMotdBtnActionPerformed
+    {//GEN-HEADEREND:event_setSpeedMotdBtnActionPerformed
+        SettingHandler.setSpeedMotdBtnActionPerformed(speedMotdTxt, evt);
+    }//GEN-LAST:event_setSpeedMotdBtnActionPerformed
+
+    private void addColorBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addColorBtnActionPerformed
+    {//GEN-HEADEREND:event_addColorBtnActionPerformed
+        SettingHandler.addColorBtnActionPerformed(jColorChooser1, colorNameTxt, colorPlanCombo, colorMotdCombo, evt);
+    }//GEN-LAST:event_addColorBtnActionPerformed
+
+    private void colorPlanComboItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_colorPlanComboItemStateChanged
+    {//GEN-HEADEREND:event_colorPlanComboItemStateChanged
+        SettingHandler.colorPlanComboItemStateChanged(colorPlanPanel, colorPlanCombo, evt);
+    }//GEN-LAST:event_colorPlanComboItemStateChanged
+
+    private void setColorPlanBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_setColorPlanBtnActionPerformed
+    {//GEN-HEADEREND:event_setColorPlanBtnActionPerformed
+        SettingHandler.setColorPlanBtnActionPerformed(colorPlanCombo, evt);
+    }//GEN-LAST:event_setColorPlanBtnActionPerformed
+
+    private void colorMotdComboItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_colorMotdComboItemStateChanged
+    {//GEN-HEADEREND:event_colorMotdComboItemStateChanged
+        SettingHandler.colorMotdComboItemStateChanged(colorMotdPanel, colorMotdCombo, evt);
+    }//GEN-LAST:event_colorMotdComboItemStateChanged
+
+    private void setColorMotdBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_setColorMotdBtnActionPerformed
+    {//GEN-HEADEREND:event_setColorMotdBtnActionPerformed
+        SettingHandler.setColorMotdBtnActionPerformed(colorMotdCombo, evt);
+    }//GEN-LAST:event_setColorMotdBtnActionPerformed
+
+    private void colorNameTxtFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_colorNameTxtFocusGained
+    {//GEN-HEADEREND:event_colorNameTxtFocusGained
+        if(colorNameTxt.getText().equals("Farbenname"))
+            colorNameTxt.setText("");
+    }//GEN-LAST:event_colorNameTxtFocusGained
+
+    private void colorNameTxtFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_colorNameTxtFocusLost
+    {//GEN-HEADEREND:event_colorNameTxtFocusLost
+        if(colorNameTxt.getText().equals(""))
+            colorNameTxt.setText("Farbenname");
+    }//GEN-LAST:event_colorNameTxtFocusLost
+
+    private void deleteColorActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_deleteColorActionPerformed
+    {//GEN-HEADEREND:event_deleteColorActionPerformed
+        SettingHandler.deleteColorBtnActionPerformed(colorNameTxt, colorPlanCombo, colorMotdCombo, evt);
+    }//GEN-LAST:event_deleteColorActionPerformed
+
+    private void useSQLCheckStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_useSQLCheckStateChanged
+    {//GEN-HEADEREND:event_useSQLCheckStateChanged
+        configureSQLBtn.setEnabled(useSQLCheck.isSelected());
+    }//GEN-LAST:event_useSQLCheckStateChanged
+
+    public JTextPane getStatusPane()
+    {
+        return log;
+    }
+
+    public void loadSettings()
+    {
+        load(sourceTxt, "sourcePath");
+        load(backupTxt, "backupPath");
+
+        String name = "destPath1";
+        if(Settings.getLineOf(name) == -1)
+            Settings.load(name);
+
+        for(int i = 1; Settings.getLineOf(name) != -1; i++)
+        {
+            String s = Settings.load(name);
+            destArea.append(s + "\n");
+            name = "destPath" + (i + 1);
+        }
+
+        load(speedPlanTxt, "planSpeed");
+        load(speedMotdTxt, "motdSpeed");
+
+        name = "color1";
+        for(int i = 1; Settings.getLineOf(name) != -1; i++)
+        {
+            colorPlanCombo.addItem(name);
+            colorMotdCombo.addItem(name);
+            name = "color" + (i + 1);
+        }
+
+        colorPlanCombo.setSelectedItem(Settings.load("colorPlan"));
+        colorMotdCombo.setSelectedItem(Settings.load("colorMotd"));
+    }
+
+    private void saveIfNotNull(JTextField field, String name)
+    {
+        if(field.getText().equals(""))
+            Settings.delete(name);
+        else
+            Settings.save(name, field.getText());
+    }
+
+    private void load(JTextField field, String name)
+    {
+        field.setText(Settings.load(name));
+    }
+
+    // Variables declaration - do not modify//GEN-BEGIN:variables
+    private javax.swing.JTextField MOTD;
+    private javax.swing.JButton addColorBtn;
+    private javax.swing.JCheckBox autoBackupCheck;
+    private javax.swing.JCheckBox autoDeleteSourceCheck;
+    private javax.swing.JTextField backupTxt;
+    private javax.swing.JComboBox colorMotdCombo;
+    private javax.swing.JPanel colorMotdPanel;
+    private javax.swing.JTextField colorNameTxt;
+    private javax.swing.JComboBox colorPlanCombo;
+    private javax.swing.JPanel colorPlanPanel;
+    private javax.swing.JButton configureSQLBtn;
+    private javax.swing.JButton createBackup;
+    private javax.swing.JButton deleteColor;
+    private javax.swing.JButton deleteMOTD;
+    private javax.swing.JButton deleteSource;
+    private javax.swing.JTextArea destArea;
+    private javax.swing.JButton genAll;
+    private javax.swing.JButton genMOTD;
+    private javax.swing.JButton genToday;
+    private javax.swing.JButton genTomorrow;
+    private javax.swing.JCheckBox jCheckBox2;
+    private javax.swing.JColorChooser jColorChooser1;
+    private javax.swing.JFileChooser jFileChooser1;
+    private javax.swing.JLabel jLabel1;
+    private javax.swing.JLabel jLabel10;
+    private javax.swing.JLabel jLabel11;
+    private javax.swing.JLabel jLabel13;
+    private javax.swing.JLabel jLabel14;
+    private javax.swing.JLabel jLabel2;
+    private javax.swing.JLabel jLabel3;
+    private javax.swing.JLabel jLabel4;
+    private javax.swing.JLabel jLabel5;
+    private javax.swing.JLabel jLabel6;
+    private javax.swing.JLabel jLabel7;
+    private javax.swing.JLabel jLabel8;
+    private javax.swing.JLabel jLabel9;
+    private javax.swing.JPanel jPanel1;
+    private javax.swing.JPanel jPanel2;
+    private javax.swing.JProgressBar jProgressBar1;
+    private javax.swing.JScrollPane jScrollPane1;
+    private javax.swing.JScrollPane jScrollPane2;
+    private javax.swing.JSeparator jSeparator1;
+    private javax.swing.JSeparator jSeparator2;
+    private javax.swing.JSeparator jSeparator3;
+    private javax.swing.JSeparator jSeparator4;
+    private javax.swing.JSeparator jSeparator6;
+    private javax.swing.JSeparator jSeparator7;
+    private javax.swing.JTabbedPane jTabbedPane1;
+    private javax.swing.JTextField jTextField1;
+    private javax.swing.JTextPane log;
+    private javax.swing.JButton savePathBtn;
+    private javax.swing.JButton selectBackupBtn;
+    private javax.swing.JButton selectDestBtn;
+    private javax.swing.JButton selectSourceBtn;
+    private javax.swing.JButton setColorMotdBtn;
+    private javax.swing.JButton setColorPlanBtn;
+    private javax.swing.JButton setSpeedMotdBtn;
+    private javax.swing.JButton setSpeedPlanBtn;
+    private javax.swing.JTextField sourceTxt;
+    private javax.swing.JTextField speedMotdTxt;
+    private javax.swing.JTextField speedPlanTxt;
+    private javax.swing.JCheckBox useSQLCheck;
+    // End of variables declaration//GEN-END:variables
+}
diff --git a/src/com/facharbeit/main/Input.java b/src/com/facharbeit/main/Input.java
new file mode 100644
index 0000000..6021dd5
--- /dev/null
+++ b/src/com/facharbeit/main/Input.java
@@ -0,0 +1,42 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+package com.facharbeit.main;
+
+import com.facharbeit.io.Settings;
+
+/**
+ *
+ * @author Mirko
+ */
+public class Input
+{
+
+    public static SchoolClass[] readInToday()
+    {
+        return readInPath(Settings.load("sourcePath") + "/heute");
+    }
+
+    public static SchoolClass[] readInTomorrow()
+    {
+        return readInPath(Settings.load("sourcePath") + "/morgen");
+    }
+
+    private static SchoolClass[] readInPath(String path)
+    {
+        SchoolClass[] outcome = new SchoolClass[1];
+
+        if(Settings.load("useSQL").equals("true"))
+        {
+            //krasse SQL Eskalation
+        }
+        else
+        {
+            //nicht so krasse String umwandel Eskalation
+        }
+
+        return outcome;
+    }
+}
diff --git a/src/com/facharbeit/main/Output.java b/src/com/facharbeit/main/Output.java
new file mode 100644
index 0000000..753d2a5
--- /dev/null
+++ b/src/com/facharbeit/main/Output.java
@@ -0,0 +1,30 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+package com.facharbeit.main;
+
+/**
+ *
+ * @author Mirko
+ */
+public class Output
+{
+
+    public static void generatePlanToday(SchoolClass[] schoolClasses)
+    {
+    }
+
+    public static void generatePlanTomorrow(SchoolClass[] schoolClasses)
+    {
+    }
+
+    public static void generateModt()
+    {
+    }
+
+    public static void generateFrame()
+    {
+    }
+}
diff --git a/src/com/facharbeit/main/QueueElement.java b/src/com/facharbeit/main/QueueElement.java
new file mode 100644
index 0000000..0d335ae
--- /dev/null
+++ b/src/com/facharbeit/main/QueueElement.java
@@ -0,0 +1,28 @@
+package com.facharbeit.main;
+
+import com.facharbeit.tools.Logger;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+
+public class QueueElement
+{
+    private Method method;
+    private Object[] args;
+
+    public QueueElement(Method method, Object[] args)
+    {
+        this.method = method;
+        this.args = args;
+    }
+
+    public void invoke()
+    {
+        try
+        {
+            method.invoke(null, args);
+        } catch(IllegalAccessException | IllegalArgumentException | InvocationTargetException ex)
+        {
+            Logger.log(method.getName() + " konnte nicht ausgeführt werden.", 2);
+        }
+    }
+}
diff --git a/src/com/facharbeit/main/SchoolClass.java b/src/com/facharbeit/main/SchoolClass.java
new file mode 100644
index 0000000..4746ceb
--- /dev/null
+++ b/src/com/facharbeit/main/SchoolClass.java
@@ -0,0 +1,50 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+package com.facharbeit.main;
+
+import java.util.ArrayList;
+
+/**
+ *
+ * @author Mirko
+ */
+public class SchoolClass
+{
+
+    private ArrayList<Entry> entrys;
+
+    public SchoolClass()
+    {
+        entrys = new ArrayList<Entry>();
+    }
+
+    public SchoolClass(ArrayList<Entry> entrys)
+    {
+        this.entrys = entrys;
+    }
+
+    public ArrayList<Entry> getEntrys()
+    {
+        return entrys;
+    }
+
+    public void setEntrys(ArrayList<Entry> entrys)
+    {
+        this.entrys = entrys;
+    }
+
+    public boolean isEmpty()
+    {
+        try
+        {
+            return entrys.isEmpty();
+        } catch(NullPointerException ex)
+        {
+            return true;
+        }
+    }
+
+}
diff --git a/src/com/facharbeit/ressources/Settings16.png b/src/com/facharbeit/ressources/Settings16.png
new file mode 100644
index 0000000000000000000000000000000000000000..9460dfc746be14e4b2a6a94f91d002fa4a56318f
GIT binary patch
literal 611
zcmV-p0-XJcP)<h;3K|Lk000e1NJLTq000mG000mO1^@s6AM^iV00006VoOIv0RI60
z0RN!9r;`8x010qNS#tmY3ljhU3ljkVnw%H_000McNliru)d?C56FG}x!bkuB0q{vg
zK~y-)rIJf%6JZpEznS<<icJ&>f=aN=#)Y=sMXW9~6k=xULU18eq^Pwm5>f&c14BZf
zYe95nK#JnRiH*==SAx<uiAfg~f>mkLmxdrjL^?BWW`;2x>%z19x#ygF@3}wxCj{ps
zol&BI3dr$TBKH?fG@Vgwj@VLE`>*x`sHT~#`1-X0&1|$C>5O7D8g(O`Q4IH5!>UCA
z#B@f9T4bxM*W2c190hpr@ILWaLI!dGBA^c595S9hn=k<N_N@^%*Vm9bCF=FB_gb@w
z-5C`uF@RtdZww3?nzkkAx^C#YMqz$VD7-HM$U6lqv~;i$>AOg|QenCF1t1xZCGP(7
zj844Dzcfmf65S_zD3%MD6HEfSt3fc5It<jT_mz-N*9nQEM~=~KHhDMq7PmD#PVx9~
zn7&Xa9RV-dnN5zje@iZXUOLx(s)v9-z)EfT@`dpE`RS?GRloocgOOAhP<u2cGh1F{
zw!BEkK_39--f}Mg0!flMd%D;9WOg1RP#hl)Gxes#mZl@_^RrQJ+9R4H%h@N7IneIs
zOsE%N%xM6??p+@C_zv;&$1k$^1%Pm?NiMHa{aF1YY!P5(<2(C(0owL@cs}z1ApB`^
xblOQYO_FQts|!HVzCtjPx&%x(xZA`#;Wszp)%NPVRJ;HH002ovPDHLkV1mE{2~q$6

literal 0
HcmV?d00001

diff --git a/src/com/facharbeit/ressources/antonianumLogo.jpg b/src/com/facharbeit/ressources/antonianumLogo.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..a24bc687b553611bcb0b40752bb829a56163b68d
GIT binary patch
literal 14829
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
Qw;g}KuKX_>Jjc`j3yb!4V*mgE

literal 0
HcmV?d00001

diff --git a/src/com/facharbeit/ressources/folder.png b/src/com/facharbeit/ressources/folder.png
new file mode 100644
index 0000000000000000000000000000000000000000..0a528cfc74263ed15bc08dc248d459a90040dbe0
GIT binary patch
literal 2524
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
Ddpw#)

literal 0
HcmV?d00001

diff --git a/src/com/facharbeit/ressources/ordner.png b/src/com/facharbeit/ressources/ordner.png
new file mode 100644
index 0000000000000000000000000000000000000000..37414dabf3f0cbad6450537230331b48a80d3eb6
GIT binary patch
literal 3205
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

literal 0
HcmV?d00001

diff --git a/src/com/facharbeit/sql/sqlReader.java b/src/com/facharbeit/sql/sqlReader.java
new file mode 100644
index 0000000..77603ac
--- /dev/null
+++ b/src/com/facharbeit/sql/sqlReader.java
@@ -0,0 +1,114 @@
+package com.facharbeit.sql;
+
+import com.facharbeit.tools.Logger;
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.sql.Statement;
+import java.util.ArrayList;
+
+/**
+ * Liest Daten aus einer SQL-Datenbank.
+ */
+public class sqlReader
+{
+    /**
+     * Verbindung zur Datenbank.
+     */
+    protected Connection con = null;
+
+    /**
+     * Erstellt einen neuen Reader. Mit Verbindung zu einer Datenbank.
+     * @param dbHost     Host zur Datenbank
+     * @param dbPort     Port der Datenbank
+     * @param dbName     Name der Datenbank
+     * @param dbUser     Nutername der Datenbank
+     * @param dbPassword Passwort der Datenbank
+     */
+    public sqlReader(String dbHost, int dbPort, String dbName, String dbUser, String dbPassword)
+    {
+        try
+        {
+            Class.forName("com.mysql.jdbc.Driver");
+            con = DriverManager.getConnection("jdbc:mysql://" + dbHost + ":" + dbPort + "/" + dbName + "?user=" + dbUser + "&password=" + dbPassword);
+        } catch(ClassNotFoundException | SQLException ex)
+        {
+            Logger.log("Verbindung zur Datenbank konnte nicht hergestellt werden.", 2);
+        }
+    }
+
+    /**
+     * Liest alle Zeilen aus einer Datenbank.
+     * @param tableName    Name der Tabelle, die gelesen werden soll
+     * @param tableColumms Array der Spalten, die gelesen werden solen
+     * @return Alle Zeilen der Tabelle
+     */
+    public ArrayList<String[]> readAll(String tableName, String[] tableColumms)
+    {
+        ArrayList<String[]> data = null;
+        if(con != null)
+        {
+            data = new ArrayList<String[]>();
+
+            try
+            {
+                Statement query = con.createStatement();
+                String command = "SELECT ";
+
+                for(int i = 0; i < tableColumms.length; i++)
+                {
+                    if(i > 0)
+                        command += ", ";
+                    command += "`" + tableColumms[i] + "`";
+                }
+
+                command += "FROM `" + tableName + "`";
+
+                ResultSet result = query.executeQuery(command);
+
+                while(result.next())
+                {
+                    String[] lineData = new String[tableColumms.length];
+                    for(int i = 0; i < tableColumms.length; i++)
+                        lineData[i] = result.getString(tableColumms[i]);
+
+                    data.add(lineData);
+                }
+
+            } catch(SQLException ex)
+            {
+                Logger.log("SQL-Befehl konnte nicht ausgeführt werden..", 1);
+            }
+        }
+        return data;
+    }
+
+    /**
+     * Liest eine Zeile aus einer Datenbank.
+     * @param tableName    Name der Tabelle, die gelesen werden soll
+     * @param tableColumms Spalten, die gelesen werden sollen
+     * @param line         Nummer der Zeile, die gelesen werden soll
+     * @return Inhalt der Zeile
+     */
+    public String[] readLine(String tableName, String[] tableColumms, int line)
+    {
+        return readAll(tableName, tableColumms).get(line);
+    }
+
+    /**
+     * Liest eine Zelle aus einer Datenbank.
+     * @param tableName   Name der Tabelle, die gelesen werden soll
+     * @param tableColumm Spalte, die gelesen werden soll
+     * @param line        Zeile, aus der gelesen werden soll
+     * @return Inhalt der Zelle
+     */
+    public String readCell(String tableName, String tableColumm, int line)
+    {
+        String[] columm =
+        {
+            tableColumm
+        };
+        return readAll(tableName, columm).get(line)[0];
+    }
+}
diff --git a/src/com/facharbeit/sql/sqlTableReader.java b/src/com/facharbeit/sql/sqlTableReader.java
new file mode 100644
index 0000000..72a9525
--- /dev/null
+++ b/src/com/facharbeit/sql/sqlTableReader.java
@@ -0,0 +1,77 @@
+package com.facharbeit.sql;
+
+import java.util.ArrayList;
+
+/**
+ * Liest immer aus der selben SQL-Tabelle.
+ */
+public class sqlTableReader extends sqlReader
+{
+    /**
+     * Name der Tabelle.
+     */
+    protected String tableName;
+
+    /**
+     * Spalten, die es geben soll.
+     */
+    protected String[] tableColumms;
+
+    /**
+     * Erstellt einen Table-Reader.
+     * @param dbHost       Host zur Datenbank
+     * @param dbPort       Port der Datenbank
+     * @param dbName       Name der Datenbank
+     * @param dbUser       Nutername der Datenbank
+     * @param dbPassword   Passwort der Datenbank
+     * @param tableName    Name der Tabelle
+     * @param tableColumms Spalten, die es geben soll
+     */
+    public sqlTableReader(String dbHost, int dbPort, String dbName, String dbUser, String dbPassword, String tableName, String[] tableColumms)
+    {
+        super(dbHost, dbPort, dbName, dbUser, dbPassword);
+        this.tableColumms = tableColumms;
+        this.tableName = tableName;
+    }
+
+    /**
+     * Liest eine ganze Tabelle.
+     * @return Inhalt der Tabelle
+     */
+    public ArrayList<String[]> readAll()
+    {
+        try
+        {
+            return readAll(this.tableName, this.tableColumms);
+        } catch(NullPointerException ex)
+        {
+            System.out.println("SQL-Datenbank konnte nicht ausgelesen werden");
+            return null;
+        }
+    }
+
+    /**
+     * Liest eine Zeile einer Tabelle.
+     * @param line Zeile, die gelesen werden soll
+     * @return Inhalt der Zeile
+     */
+    public String[] read(int line)
+    {
+        return readAll().get(line);
+    }
+
+    /**
+     * Liest eine Spalte aus einer Zeile einer Tabelle.
+     * @param tableColumm Spalte, die gelesen werden soll
+     * @param line        Zeile, die gelesen werden soll
+     * @return Inhalt der Zelle
+     */
+    public String read(String tableColumm, int line)
+    {
+        String[] columm =
+        {
+            tableColumm
+        };
+        return readAll(this.tableName, columm).get(line)[0];
+    }
+}
diff --git a/src/com/facharbeit/sql/sqlTableWriter.java b/src/com/facharbeit/sql/sqlTableWriter.java
new file mode 100644
index 0000000..f2c25e6
--- /dev/null
+++ b/src/com/facharbeit/sql/sqlTableWriter.java
@@ -0,0 +1,64 @@
+package com.facharbeit.sql;
+
+import java.util.ArrayList;
+
+/**
+ * Schreibt immer in die selbe Tabelle.
+ */
+public class sqlTableWriter extends sqlWriter
+{
+    /**
+     * Name der Tabelle.
+     */
+    protected String tableName;
+
+    /**
+     * Spalten, die es geben soll.
+     */
+    protected String[] tableColumms;
+
+    /**
+     * Erstellt einen neuen Table-Writer.
+     * @param dbHost       Host zur Datenbank
+     * @param dbPort       Port der Datenbank
+     * @param dbName       Name der Datenbank
+     * @param dbUser       Nutername der Datenbank
+     * @param dbPassword   Passwort der Datenbank
+     * @param tableName    Name der Tabelle
+     * @param tableColumms Spalten, die es geben soll
+     */
+    public sqlTableWriter(String dbHost, int dbPort, String dbName, String dbUser, String dbPassword, String tableName, String[] tableColumms)
+    {
+        super(dbHost, dbPort, dbName, dbUser, dbPassword);
+        this.tableColumms = tableColumms;
+        this.tableName = tableName;
+    }
+
+    /**
+     * Fügt mehrere Zeilen zu der Tabelle hinzu.
+     * @param data Inhalt der Zeilen
+     */
+    public void addAll(ArrayList<String[]> data)
+    {
+        addAll(tableName, tableColumms, data);
+    }
+
+    /**
+     * Fügt eine Zeile zu der Tabelle hinzu.
+     * @param data Inhalt der Zeile
+     */
+    public void add(String[] data)
+    {
+        addLine(tableName, tableColumms, data);
+    }
+
+    /**
+     * Fügt eine Zeile mit einer Spalte zu der Tabelle hinzu.
+     * @param tableColumm Name der Zelle
+     * @param data        Inhalt der Zelle
+     */
+    public void add(String tableColumm, String data)
+    {
+        addCell(tableName, tableColumm, data);
+    }
+}
diff --git a/src/com/facharbeit/sql/sqlWriter.java b/src/com/facharbeit/sql/sqlWriter.java
new file mode 100644
index 0000000..2d182c0
--- /dev/null
+++ b/src/com/facharbeit/sql/sqlWriter.java
@@ -0,0 +1,118 @@
+package com.facharbeit.sql;
+
+import com.facharbeit.tools.Logger;
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.SQLException;
+import java.sql.Statement;
+import java.util.ArrayList;
+
+/**
+ * Schreibt in eine Datenbank.
+ */
+public class sqlWriter
+{
+    /**
+     * Verbindung zur Datenbank.
+     */
+    protected Connection con = null;
+
+    /**
+     * Name der Datenbank.
+     */
+    protected String dbName;
+
+    /**
+     * Erstellt einen neuen Writer. Mit Verbindung zu einer Datenbank.
+     * @param dbHost     Host zur Datenbank
+     * @param dbPort     Port der Datenbank
+     * @param dbName     Name der Datenbank
+     * @param dbUser     Nutername der Datenbank
+     * @param dbPassword Passwort der Datenbank
+     */
+    public sqlWriter(String dbHost, int dbPort, String dbName, String dbUser, String dbPassword)
+    {
+        this.dbName = dbName;
+
+        try
+        {
+            Class.forName("com.mysql.jdbc.Driver");
+            con = DriverManager.getConnection("jdbc:mysql://" + dbHost + ":" + dbPort + "/" + dbName + "?user=" + dbUser + "&password=" + dbPassword);
+        } catch(ClassNotFoundException | SQLException ex)
+        {
+            Logger.log("Verbindung zur Datenbank konnte nicht hergestellt werden.", 2);
+        }
+    }
+
+    /**
+     * Fügt Zeilen zu einer Tabelle hinzu.
+     * @param tableName    Name der Tabelle
+     * @param tableColumms Spalten, die es in den Zeilen geben soll
+     * @param data         Inhalt, der geschrieben werden soll
+     */
+    public void addAll(String tableName, String[] tableColumms, ArrayList<String[]> data)
+    {
+        if(con != null)
+            for(String[] lineData : data)
+                try
+                {
+                    Statement query = con.createStatement();
+                    String command = "INSERT INTO `" + dbName + "`.`" + tableName + "` (";
+
+                    for(int i = 0; i < tableColumms.length; i++)
+                    {
+                        if(i > 0)
+                            command += ", ";
+                        command += "`" + tableColumms[i] + "`";
+                    }
+
+                    command += ") VALUES (";
+
+                    for(int i = 0; i < lineData.length; i++)
+                    {
+                        if(i > 0)
+                            command += ", ";
+                        command += "`" + tableColumms[i] + "`";
+                    }
+
+                    command += ");";
+
+                    query.executeQuery(command);
+                } catch(SQLException ex)
+                {
+                    Logger.log("SQL-Befehl konnte nicht ausgeführt werden..", 1);
+                }
+    }
+
+    /**
+     * Fügt nur eine Zeile zur Tabelle hinzu.
+     * @param tableName    Name der Tabelle
+     * @param tableColumms Spalten, die es in der Zeile geben soll
+     * @param data         Inhalt, der geschrieben werden soll
+     */
+    public void addLine(String tableName, String[] tableColumms, String[] data)
+    {
+        ArrayList<String[]> dataList = new ArrayList<String[]>();
+        dataList.set(0, data);
+        addAll(tableName, tableColumms, dataList);
+    }
+
+    /**
+     * Fügt nur eine Zeile mit einer Zelle hinzu.
+     * @param tableName   Name der Tabelle
+     * @param tableColumm Spalte, die es in der Zeile geben soll
+     * @param data        Inhalt, der geschrieben werden soll
+     */
+    public void addCell(String tableName, String tableColumm, String data)
+    {
+        String[] tableColumms =
+        {
+            tableColumm
+        };
+        String[] dataArray =
+        {
+            data
+        };
+        addLine(tableName, tableColumms, dataArray);
+    }
+}
diff --git a/src/com/facharbeit/tools/Logger.java b/src/com/facharbeit/tools/Logger.java
new file mode 100644
index 0000000..5496a17
--- /dev/null
+++ b/src/com/facharbeit/tools/Logger.java
@@ -0,0 +1,94 @@
+package com.facharbeit.tools;
+
+import java.awt.Color;
+import java.util.Calendar;
+import javax.swing.JTextPane;
+import javax.swing.text.BadLocationException;
+import javax.swing.text.Document;
+import javax.swing.text.SimpleAttributeSet;
+import javax.swing.text.StyleConstants;
+
+/**
+ * Klasse, die alle Aktionen registriert und im Programm ausgibt.
+ */
+public class Logger
+{
+    /**
+     * Textfeld zur Ausgabe des Logs.
+     */
+    public static JTextPane textPane;
+
+    /**
+     * "Konstruktor".
+     * @param out Textfeld für die Ausgabe
+     */
+    public static void init(JTextPane out)
+    {
+        textPane = out;
+    }
+
+    /**
+     * Standard zur Ausgabe von Fehlern oder Informationen.
+     * @param text Ausgegebener Text
+     * @param prio Priorität des Textes. 0-INFO, 1-PROBLEM, 2-FEHLER
+     */
+    public static void log(String text, int prio)
+    {
+        String priority;
+        Color color;
+
+        switch(prio)
+        {
+            case 0:
+                priority = "INFO";
+                color = new Color(0, 100, 0);
+                break;
+
+            case 1:
+                priority = "PROBLEM";
+                color = new Color(200, 165, 0);
+                break;
+
+            case 2:
+                priority = "FEHLER";
+                color = new Color(160, 0, 0);
+                break;
+
+            default:
+                priority = "UNBEKANNT";
+                color = Color.BLACK;
+                break;
+        }
+
+        String content = "[" + timestamp() + "] " + priority + ": " + text + "\n"; //Ausgabe-String wird zusammengestellt.
+
+        SimpleAttributeSet set = new SimpleAttributeSet(); //Attribut-Set zur verwaltung der Farbe wird erstellt.
+        StyleConstants.setForeground(set, color); //Farbe wird gesetzt.
+        Document doc = textPane.getStyledDocument();
+
+        try
+        {
+            doc.insertString(doc.getLength(), content, set); //Text wird mit Farbe ausgegeben.
+        } catch(BadLocationException ex)
+        {
+            System.out.println("KONNTE LOG NICHT ERWEITERN!");
+        }
+
+        textPane.setCaretPosition(doc.getLength());
+    }
+
+    /**
+     * Erstellt einen benutzerdefinierten Zeitstempel.
+     * @return Datum u. Zeit als String
+     */
+    private static String timestamp()
+    {
+        Calendar c = Calendar.getInstance();
+        return c.get(Calendar.DAY_OF_MONTH) + "."
+                + c.get(Calendar.MONTH) + "."
+                + String.valueOf(c.get(Calendar.YEAR)).substring(2) + " "
+                + c.get(Calendar.HOUR_OF_DAY) + ":"
+                + c.get(Calendar.MINUTE) + ":"
+                + c.get(Calendar.SECOND);
+    }
+}
diff --git a/src/com/facharbeit/tools/TextTool.java b/src/com/facharbeit/tools/TextTool.java
new file mode 100644
index 0000000..c01fd09
--- /dev/null
+++ b/src/com/facharbeit/tools/TextTool.java
@@ -0,0 +1,97 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+package com.facharbeit.tools;
+
+/**
+ *
+ * @author Mirko
+ */
+public class TextTool
+{
+
+    public String cutToIncl(String input, String toFind)
+    {
+        char[] inputAsArray = input.toCharArray();
+        char[] toFindAsArray = toFind.toCharArray();
+        char[] toReturn = toFindAsArray;
+        if(input.contains(toFind))
+        {
+            boolean mistake = true;
+            int foundIndex = 0;
+            for(int i = 0; i < inputAsArray.length && mistake == true; i++)
+            {
+                mistake = false;
+                for(int o = 0; o < toFindAsArray.length && mistake == false; o++)
+                    if(inputAsArray[i + o] != toFindAsArray[o])
+                        mistake = true;
+                if(mistake == false)
+                    foundIndex = i + toFindAsArray.length;
+            }
+
+            toReturn = new char[inputAsArray.length - foundIndex];
+            for(int i = 0; i < toReturn.length; i++)
+                toReturn[i] = inputAsArray[i + foundIndex];
+        }
+        return String.copyValueOf(toReturn);
+    }
+
+    public String cutToExcl(String input, String toFind)
+    {
+        if(input.contains(toFind))
+            return toFind + cutToIncl(input, toFind);
+        else
+            return input;
+    }
+
+    public String cutFromIncl(String input, String toFind)
+    {
+        if(input.contains(toFind))
+        {
+            char[] toCut = cutFromExcl(input, toFind).toCharArray();
+            char[] toReturn = new char[toCut.length - toFind.length()];
+            for(int i = 0; i < toReturn.length; i++)
+                toReturn[i] = toCut[i];
+            return String.copyValueOf(toReturn);
+        } else
+            return input;
+    }
+
+    public String cutFromExcl(String input, String toFind)
+    {
+        char[] inputAsArray = input.toCharArray();
+        char[] toFindAsArray = toFind.toCharArray();
+        char[] toReturn = toFindAsArray;
+        if(input.contains(toFind))
+        {
+            boolean mistake = true;
+            int foundIndex = 0;
+            for(int i = 0; i < inputAsArray.length && mistake == true; i++)
+            {
+                mistake = false;
+                for(int o = 0; o < toFindAsArray.length && mistake == false; o++)
+                    if(inputAsArray[i + o] != toFindAsArray[o])
+                        mistake = true;
+                if(mistake == false)
+                    foundIndex = i + toFindAsArray.length;
+            }
+
+            toReturn = new char[foundIndex];
+            for(int i = 0; i < toReturn.length; i++)
+                toReturn[i] = inputAsArray[i];
+        }
+        return String.copyValueOf(toReturn);
+    }
+
+    public String getBetweenIncl(String input, String start, String end)
+    {
+        return cutToIncl(cutFromIncl(input, end), start);
+    }
+
+    public String getBetweenExcl(String input, String start, String end)
+    {
+        return cutToExcl(cutFromExcl(input, end), start);
+    }
+}
-- 
1.9.4.msysgit.2

